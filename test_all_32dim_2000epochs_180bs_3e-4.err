module: loading 'anaconda/3-5.2.0'
module: anaconda: "See https://docs.ccv.brown.edu/oscar/software/anaconda for potential issues on VNC and batch jobs"
module: unloading 'python/2.7.12'
module: warning: unknown version 'python/3.8.8'
  Please contact CCV support (support@ccv.brown.edu) if you think that software
  with this module name should be installed.
module: loading 'gcc/8.3'
module: gcc: "Note: loading the gcc module overrides the gcc version on the system.  If you want to revert to the version of gcc provided by the OS, unload the gcc module."
module: loading 'cuda/10.2'
module: cuda: To use: module load gcc/8.3
2022-01-21 08:06:37.511192: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/runtime/opt/cuda/10.2/cuda/lib64:/gpfs/runtime/opt/cuda/10.2/src/lib64:/gpfs/runtime/opt/gcc/8.3/lib64:/gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2022-01-21 08:06:37.511234: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
2022-01-21 08:06:46.461175: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/home/aarjun1/.conda/envs/pytracker/lib/python3.8/site-packages/cv2/../../lib64:/gpfs/runtime/opt/cuda/10.2/cuda/lib64:/gpfs/runtime/opt/cuda/10.2/src/lib64:/gpfs/runtime/opt/gcc/8.3/lib64:/gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2022-01-21 08:06:46.461378: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcublas.so.11'; dlerror: libcublas.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/home/aarjun1/.conda/envs/pytracker/lib/python3.8/site-packages/cv2/../../lib64:/gpfs/runtime/opt/cuda/10.2/cuda/lib64:/gpfs/runtime/opt/cuda/10.2/src/lib64:/gpfs/runtime/opt/gcc/8.3/lib64:/gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2022-01-21 08:06:46.461518: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcublasLt.so.11'; dlerror: libcublasLt.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/home/aarjun1/.conda/envs/pytracker/lib/python3.8/site-packages/cv2/../../lib64:/gpfs/runtime/opt/cuda/10.2/cuda/lib64:/gpfs/runtime/opt/cuda/10.2/src/lib64:/gpfs/runtime/opt/gcc/8.3/lib64:/gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2022-01-21 08:06:46.463946: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcusolver.so.11'; dlerror: libcusolver.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/home/aarjun1/.conda/envs/pytracker/lib/python3.8/site-packages/cv2/../../lib64:/gpfs/runtime/opt/cuda/10.2/cuda/lib64:/gpfs/runtime/opt/cuda/10.2/src/lib64:/gpfs/runtime/opt/gcc/8.3/lib64:/gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2022-01-21 08:06:46.464106: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcusparse.so.11'; dlerror: libcusparse.so.11: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/home/aarjun1/.conda/envs/pytracker/lib/python3.8/site-packages/cv2/../../lib64:/gpfs/runtime/opt/cuda/10.2/cuda/lib64:/gpfs/runtime/opt/cuda/10.2/src/lib64:/gpfs/runtime/opt/gcc/8.3/lib64:/gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2022-01-21 08:06:46.464773: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudnn.so.8'; dlerror: libcudnn.so.8: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /gpfs/home/aarjun1/.conda/envs/pytracker/lib/python3.8/site-packages/cv2/../../lib64:/gpfs/runtime/opt/cuda/10.2/cuda/lib64:/gpfs/runtime/opt/cuda/10.2/src/lib64:/gpfs/runtime/opt/gcc/8.3/lib64:/gpfs/runtime/opt/intel/2017.0/lib/intel64:/gpfs/runtime/opt/intel/2017.0/mkl/lib/intel64:/gpfs/runtime/opt/java/8u111/jre/lib/amd64
2022-01-21 08:06:46.464800: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1850] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2022-01-21 08:06:46.465211: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:01<00:00,  1.24s/it]Processing test images: 2it [00:01,  1.27it/s]                       Processing test images: 3it [00:02,  1.56it/s]Processing test images: 4it [00:02,  1.75it/s]Processing test images: 5it [00:03,  1.87it/s]Processing test images: 6it [00:03,  1.94it/s]Processing test images: 7it [00:04,  2.01it/s]Processing test images: 8it [00:04,  2.06it/s]Processing test images: 9it [00:04,  2.10it/s]Processing test images: 10it [00:05,  2.12it/s]Processing test images: 11it [00:05,  2.14it/s]Processing test images: 12it [00:06,  2.15it/s]Processing test images: 13it [00:06,  2.16it/s]Processing test images: 14it [00:07,  2.16it/s]Processing test images: 15it [00:07,  2.17it/s]Processing test images: 16it [00:08,  2.17it/s]Processing test images: 17it [00:08,  2.17it/s]Processing test images: 18it [00:09,  2.18it/s]Processing test images: 19it [00:09,  2.18it/s]Processing test images: 20it [00:10,  2.18it/s]Processing test images: 21it [00:10,  2.18it/s]Processing test images: 22it [00:10,  2.18it/s]Processing test images: 23it [00:11,  2.18it/s]Processing test images: 24it [00:11,  2.18it/s]Processing test images: 25it [00:12,  2.18it/s]Processing test images: 26it [00:12,  2.18it/s]Processing test images: 27it [00:13,  2.18it/s]Processing test images: 28it [00:13,  2.18it/s]Processing test images: 29it [00:14,  2.18it/s]Processing test images: 30it [00:14,  2.18it/s]Processing test images: 31it [00:15,  2.18it/s]Processing test images: 32it [00:15,  2.18it/s]Processing test images: 33it [00:15,  2.18it/s]Processing test images: 34it [00:16,  2.18it/s]Processing test images: 35it [00:16,  2.18it/s]Processing test images: 36it [00:17,  2.18it/s]Processing test images: 37it [00:17,  2.18it/s]Processing test images: 38it [00:18,  2.18it/s]Processing test images: 39it [00:18,  2.18it/s]Processing test images: 40it [00:19,  2.18it/s]Processing test images: 41it [00:19,  2.18it/s]Processing test images: 42it [00:20,  2.18it/s]Processing test images: 43it [00:20,  2.18it/s]Processing test images: 44it [00:21,  2.18it/s]Processing test images: 45it [00:21,  2.18it/s]Processing test images: 46it [00:21,  2.18it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:25,  2.18it/s]Processing test images: 54it [00:25,  2.18it/s]Processing test images: 55it [00:26,  2.18it/s]Processing test images: 56it [00:26,  2.18it/s]Processing test images: 57it [00:27,  2.17it/s]Processing test images: 58it [00:27,  2.16it/s]Processing test images: 59it [00:27,  2.16it/s]Processing test images: 60it [00:28,  2.16it/s]Processing test images: 61it [00:28,  2.16it/s]Processing test images: 62it [00:29,  2.16it/s]Processing test images: 63it [00:29,  2.16it/s]Processing test images: 64it [00:30,  2.16it/s]Processing test images: 65it [00:30,  2.16it/s]Processing test images: 66it [00:31,  2.16it/s]Processing test images: 67it [00:31,  2.16it/s]Processing test images: 68it [00:32,  2.16it/s]Processing test images: 69it [00:32,  2.16it/s]Processing test images: 70it [00:33,  2.16it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:38,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:39,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.18it/s]Processing test images: 89it [00:41,  2.18it/s]Processing test images: 90it [00:42,  2.18it/s]Processing test images: 91it [00:42,  2.18it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.18it/s]Processing test images: 94it [00:44,  2.18it/s]Processing test images: 95it [00:44,  2.18it/s]Processing test images: 96it [00:44,  2.18it/s]Processing test images: 97it [00:45,  2.18it/s]Processing test images: 98it [00:45,  2.18it/s]Processing test images: 99it [00:46,  2.18it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.18it/s]Processing test images: 102it [00:47,  2.18it/s]Processing test images: 103it [00:48,  2.18it/s]Processing test images: 104it [00:48,  2.18it/s]Processing test images: 105it [00:49,  2.18it/s]Processing test images: 106it [00:49,  2.18it/s]Processing test images: 107it [00:50,  2.18it/s]Processing test images: 108it [00:50,  2.18it/s]Processing test images: 109it [00:50,  2.18it/s]Processing test images: 110it [00:51,  2.18it/s]Processing test images: 111it [00:51,  2.18it/s]Processing test images: 112it [00:52,  2.18it/s]Processing test images: 113it [00:52,  2.18it/s]Processing test images: 114it [00:53,  2.18it/s]Processing test images: 115it [00:53,  2.18it/s]Processing test images: 116it [00:54,  2.18it/s]Processing test images: 117it [00:54,  2.18it/s]Processing test images: 118it [00:55,  2.18it/s]Processing test images: 119it [00:55,  2.18it/s]Processing test images: 120it [00:56,  2.17it/s]Processing test images: 121it [00:56,  2.17it/s]Processing test images: 122it [00:56,  2.18it/s]Processing test images: 123it [00:57,  2.17it/s]Processing test images: 124it [00:57,  2.17it/s]Processing test images: 125it [00:58,  2.17it/s]Processing test images: 126it [00:58,  2.17it/s]Processing test images: 127it [00:59,  2.17it/s]Processing test images: 128it [00:59,  2.17it/s]Processing test images: 129it [01:00,  2.17it/s]Processing test images: 130it [01:00,  2.17it/s]Processing test images: 131it [01:01,  2.17it/s]Processing test images: 132it [01:01,  2.17it/s]Processing test images: 133it [01:02,  2.17it/s]Processing test images: 134it [01:02,  2.17it/s]Processing test images: 135it [01:02,  2.18it/s]Processing test images: 136it [01:03,  2.17it/s]Processing test images: 137it [01:03,  2.17it/s]Processing test images: 138it [01:04,  2.17it/s]Processing test images: 139it [01:04,  2.17it/s]Processing test images: 140it [01:05,  2.17it/s]Processing test images: 141it [01:05,  2.17it/s]Processing test images: 142it [01:06,  2.17it/s]Processing test images: 143it [01:06,  2.17it/s]Processing test images: 144it [01:07,  2.17it/s]Processing test images: 145it [01:07,  2.17it/s]Processing test images: 146it [01:07,  2.17it/s]Processing test images: 147it [01:08,  2.17it/s]Processing test images: 148it [01:08,  2.17it/s]Processing test images: 149it [01:09,  2.17it/s]Processing test images: 150it [01:09,  2.17it/s]Processing test images: 151it [01:10,  2.17it/s]Processing test images: 152it [01:10,  2.17it/s]Processing test images: 153it [01:11,  2.17it/s]Processing test images: 154it [01:11,  2.16it/s]Processing test images: 155it [01:12,  2.16it/s]Processing test images: 156it [01:12,  2.16it/s]Processing test images: 157it [01:13,  2.16it/s]Processing test images: 158it [01:13,  2.16it/s]Processing test images: 159it [01:13,  2.16it/s]Processing test images: 160it [01:14,  2.16it/s]Processing test images: 161it [01:14,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.16it/s]Processing test images: 167it [01:17,  2.16it/s]Processing test images: 168it [01:18,  2.16it/s]Processing test images: 169it [01:18,  2.17it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.16it/s]Processing test images: 172it [01:20,  2.16it/s]Processing test images: 173it [01:20,  2.17it/s]Processing test images: 174it [01:20,  2.17it/s]Processing test images: 175it [01:21,  2.17it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.17it/s]Processing test images: 178it [01:22,  2.17it/s]Processing test images: 179it [01:23,  2.17it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:24,  2.17it/s]Processing test images: 182it [01:24,  2.17it/s]Processing test images: 183it [01:25,  2.17it/s]Processing test images: 184it [01:25,  2.17it/s]Processing test images: 185it [01:25,  2.17it/s]Processing test images: 186it [01:26,  2.17it/s]Processing test images: 187it [01:26,  2.17it/s]Processing test images: 188it [01:27,  2.17it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.17it/s]Processing test images: 193it [01:29,  2.17it/s]Processing test images: 194it [01:30,  2.17it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:31,  2.17it/s]Processing test images: 197it [01:31,  2.17it/s]Processing test images: 198it [01:31,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:32,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.17it/s]Processing test images: 208it [01:36,  2.17it/s]Processing test images: 209it [01:37,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:37,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:38,  2.17it/s]Processing test images: 214it [01:39,  2.17it/s]Processing test images: 215it [01:39,  2.17it/s]Processing test images: 216it [01:40,  2.17it/s]Processing test images: 217it [01:40,  2.17it/s]Processing test images: 218it [01:41,  2.17it/s]Processing test images: 219it [01:41,  2.17it/s]Processing test images: 220it [01:42,  2.17it/s]Processing test images: 221it [01:42,  2.17it/s]Processing test images: 222it [01:43,  2.17it/s]Processing test images: 223it [01:43,  2.17it/s]Processing test images: 224it [01:43,  2.17it/s]Processing test images: 225it [01:44,  2.17it/s]Processing test images: 226it [01:44,  2.17it/s]Processing test images: 227it [01:45,  2.17it/s]Processing test images: 228it [01:45,  2.17it/s]Processing test images: 229it [01:46,  2.17it/s]Processing test images: 230it [01:46,  2.17it/s]Processing test images: 231it [01:47,  2.17it/s]Processing test images: 232it [01:47,  2.17it/s]Processing test images: 233it [01:48,  2.17it/s]Processing test images: 234it [01:48,  2.17it/s]Processing test images: 235it [01:49,  2.17it/s]Processing test images: 236it [01:49,  2.17it/s]Processing test images: 237it [01:49,  2.17it/s]Processing test images: 238it [01:50,  2.17it/s]Processing test images: 239it [01:50,  2.17it/s]Processing test images: 240it [01:51,  2.17it/s]Processing test images: 241it [01:51,  2.17it/s]Processing test images: 242it [01:52,  2.17it/s]Processing test images: 243it [01:52,  2.17it/s]Processing test images: 244it [01:53,  2.17it/s]Processing test images: 245it [01:53,  2.17it/s]Processing test images: 246it [01:54,  2.17it/s]Processing test images: 247it [01:54,  2.17it/s]Processing test images: 248it [01:55,  2.17it/s]Processing test images: 249it [01:55,  2.17it/s]Processing test images: 250it [01:55,  2.17it/s]Processing test images: 251it [01:56,  2.17it/s]Processing test images: 252it [01:56,  2.17it/s]Processing test images: 253it [01:57,  2.17it/s]Processing test images: 254it [01:57,  2.17it/s]Processing test images: 255it [01:58,  2.17it/s]Processing test images: 256it [01:58,  2.17it/s]Processing test images: 257it [01:59,  2.17it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.16it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.16it/s]Processing test images: 263it [02:01,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:02,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:03,  2.16it/s]Processing test images: 268it [02:04,  2.16it/s]Processing test images: 269it [02:04,  2.17it/s]Processing test images: 270it [02:05,  2.16it/s]Processing test images: 271it [02:05,  2.16it/s]Processing test images: 272it [02:06,  2.16it/s]Processing test images: 273it [02:06,  2.16it/s]Processing test images: 274it [02:07,  2.16it/s]Processing test images: 275it [02:07,  2.16it/s]Processing test images: 276it [02:07,  2.16it/s]Processing test images: 277it [02:08,  2.16it/s]Processing test images: 278it [02:08,  2.16it/s]Processing test images: 279it [02:09,  2.16it/s]Processing test images: 280it [02:09,  2.16it/s]Processing test images: 281it [02:10,  2.16it/s]Processing test images: 282it [02:10,  2.16it/s]Processing test images: 283it [02:11,  2.16it/s]Processing test images: 284it [02:11,  2.17it/s]Processing test images: 285it [02:12,  2.17it/s]Processing test images: 286it [02:12,  2.17it/s]Processing test images: 287it [02:13,  2.17it/s]Processing test images: 288it [02:13,  2.17it/s]Processing test images: 289it [02:13,  2.17it/s]Processing test images: 290it [02:14,  2.21it/s]Processing test images: 291it [02:14,  2.26it/s]Processing test images: 292it [02:15,  2.30it/s]Processing test images: 293it [02:15,  2.32it/s]Processing test images: 294it [02:16,  2.34it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:16,  2.36it/s]Processing test images: 297it [02:17,  2.37it/s]Processing test images: 298it [02:17,  2.37it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:02<00:28,  2.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:02<00:18,  2.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:02<00:13,  4.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:02<00:09,  5.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:02<00:07,  6.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:03<00:06,  7.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:03<00:05,  8.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:03<00:05,  8.09it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:03<00:04,  9.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:03<00:04,  9.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:04<00:03, 10.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:04<00:03, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:04<00:02, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:04<00:02, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:04<00:03,  9.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:05<00:02, 10.21it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:05<00:02, 10.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:05<00:02, 11.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:05<00:01, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:05<00:01, 11.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:05<00:01, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:06<00:01,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:06<00:01, 10.49it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:06<00:01, 11.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:06<00:00, 11.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:06<00:00, 11.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:06<00:00, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:07<00:00, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:07<00:00,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:07<00:00, 10.53it/s][AWriting gif images: 100%|██████████| 64/64 [00:07<00:00,  8.50it/s]
Making gifs:  20%|██        | 1/5 [00:12<00:48, 12.02s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 11.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.67it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:00, 12.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:01,  9.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.88it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.26it/s]
Making gifs:  40%|████      | 2/5 [00:19<00:28,  9.61s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:07,  8.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:03, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 10.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 12.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03,  9.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 12.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01,  9.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 12.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00,  9.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.02it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.04it/s]
Making gifs:  60%|██████    | 3/5 [00:27<00:17,  8.82s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05,  9.67it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 12.06it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:02<00:02, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02,  9.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.67it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01,  9.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 12.04it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.29it/s]
Making gifs:  80%|████████  | 4/5 [00:35<00:08,  8.38s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:08,  6.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:06,  9.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05, 10.55it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 11.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 12.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:02, 12.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 12.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:04<00:02,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 12.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.42it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.06it/s]
Making gifs: 100%|██████████| 5/5 [00:43<00:00,  8.19s/it]Making gifs: 100%|██████████| 5/5 [00:43<00:00,  8.68s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.03it/s]Processing test images: 2it [00:01,  1.47it/s]                       Processing test images: 3it [00:01,  1.72it/s]Processing test images: 4it [00:02,  1.86it/s]Processing test images: 5it [00:02,  1.95it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.00it/s]Processing test images: 8it [00:04,  2.05it/s]Processing test images: 9it [00:04,  2.09it/s]Processing test images: 10it [00:05,  2.11it/s]Processing test images: 11it [00:05,  2.13it/s]Processing test images: 12it [00:06,  2.14it/s]Processing test images: 13it [00:06,  2.15it/s]Processing test images: 14it [00:07,  2.15it/s]Processing test images: 15it [00:07,  2.16it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.16it/s]Processing test images: 18it [00:08,  2.16it/s]Processing test images: 19it [00:09,  2.16it/s]Processing test images: 20it [00:09,  2.16it/s]Processing test images: 21it [00:10,  2.16it/s]Processing test images: 22it [00:10,  2.16it/s]Processing test images: 23it [00:11,  2.16it/s]Processing test images: 24it [00:11,  2.16it/s]Processing test images: 25it [00:12,  2.16it/s]Processing test images: 26it [00:12,  2.16it/s]Processing test images: 27it [00:13,  2.16it/s]Processing test images: 28it [00:13,  2.16it/s]Processing test images: 29it [00:13,  2.16it/s]Processing test images: 30it [00:14,  2.16it/s]Processing test images: 31it [00:14,  2.16it/s]Processing test images: 32it [00:15,  2.16it/s]Processing test images: 33it [00:15,  2.16it/s]Processing test images: 34it [00:16,  2.16it/s]Processing test images: 35it [00:16,  2.16it/s]Processing test images: 36it [00:17,  2.16it/s]Processing test images: 37it [00:17,  2.16it/s]Processing test images: 38it [00:18,  2.16it/s]Processing test images: 39it [00:18,  2.16it/s]Processing test images: 40it [00:19,  2.16it/s]Processing test images: 41it [00:19,  2.16it/s]Processing test images: 42it [00:20,  2.16it/s]Processing test images: 43it [00:20,  2.16it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:25,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:26,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.17it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:31,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:32,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:43,  2.17it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.17it/s]Processing test images: 102it [00:47,  2.17it/s]Processing test images: 103it [00:48,  2.17it/s]Processing test images: 104it [00:48,  2.17it/s]Processing test images: 105it [00:49,  2.17it/s]Processing test images: 106it [00:49,  2.17it/s]Processing test images: 107it [00:49,  2.17it/s]Processing test images: 108it [00:50,  2.17it/s]Processing test images: 109it [00:50,  2.17it/s]Processing test images: 110it [00:51,  2.17it/s]Processing test images: 111it [00:51,  2.17it/s]Processing test images: 112it [00:52,  2.17it/s]Processing test images: 113it [00:52,  2.17it/s]Processing test images: 114it [00:53,  2.17it/s]Processing test images: 115it [00:53,  2.17it/s]Processing test images: 116it [00:54,  2.17it/s]Processing test images: 117it [00:54,  2.17it/s]Processing test images: 118it [00:55,  2.17it/s]Processing test images: 119it [00:55,  2.16it/s]Processing test images: 120it [00:55,  2.15it/s]Processing test images: 121it [00:56,  2.15it/s]Processing test images: 122it [00:56,  2.15it/s]Processing test images: 123it [00:57,  2.16it/s]Processing test images: 124it [00:57,  2.16it/s]Processing test images: 125it [00:58,  2.16it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.16it/s]Processing test images: 129it [01:00,  2.16it/s]Processing test images: 130it [01:00,  2.16it/s]Processing test images: 131it [01:01,  2.16it/s]Processing test images: 132it [01:01,  2.16it/s]Processing test images: 133it [01:02,  2.15it/s]Processing test images: 134it [01:02,  2.15it/s]Processing test images: 135it [01:02,  2.15it/s]Processing test images: 136it [01:03,  2.15it/s]Processing test images: 137it [01:03,  2.15it/s]Processing test images: 138it [01:04,  2.15it/s]Processing test images: 139it [01:04,  2.15it/s]Processing test images: 140it [01:05,  2.15it/s]Processing test images: 141it [01:05,  2.16it/s]Processing test images: 142it [01:06,  2.16it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:07,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:08,  2.16it/s]Processing test images: 147it [01:08,  2.16it/s]Processing test images: 148it [01:08,  2.16it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:09,  2.16it/s]Processing test images: 151it [01:10,  2.16it/s]Processing test images: 152it [01:10,  2.16it/s]Processing test images: 153it [01:11,  2.16it/s]Processing test images: 154it [01:11,  2.16it/s]Processing test images: 155it [01:12,  2.16it/s]Processing test images: 156it [01:12,  2.16it/s]Processing test images: 157it [01:13,  2.16it/s]Processing test images: 158it [01:13,  2.16it/s]Processing test images: 159it [01:14,  2.16it/s]Processing test images: 160it [01:14,  2.16it/s]Processing test images: 161it [01:14,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.17it/s]Processing test images: 166it [01:17,  2.17it/s]Processing test images: 167it [01:17,  2.17it/s]Processing test images: 168it [01:18,  2.17it/s]Processing test images: 169it [01:18,  2.17it/s]Processing test images: 170it [01:19,  2.17it/s]Processing test images: 171it [01:19,  2.17it/s]Processing test images: 172it [01:20,  2.17it/s]Processing test images: 173it [01:20,  2.17it/s]Processing test images: 174it [01:20,  2.17it/s]Processing test images: 175it [01:21,  2.17it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.17it/s]Processing test images: 178it [01:22,  2.17it/s]Processing test images: 179it [01:23,  2.17it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:24,  2.17it/s]Processing test images: 182it [01:24,  2.17it/s]Processing test images: 183it [01:25,  2.17it/s]Processing test images: 184it [01:25,  2.17it/s]Processing test images: 185it [01:26,  2.17it/s]Processing test images: 186it [01:26,  2.17it/s]Processing test images: 187it [01:26,  2.17it/s]Processing test images: 188it [01:27,  2.17it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.17it/s]Processing test images: 193it [01:29,  2.17it/s]Processing test images: 194it [01:30,  2.17it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:31,  2.17it/s]Processing test images: 197it [01:31,  2.17it/s]Processing test images: 198it [01:32,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:32,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.17it/s]Processing test images: 208it [01:36,  2.17it/s]Processing test images: 209it [01:37,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:38,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:38,  2.17it/s]Processing test images: 214it [01:39,  2.17it/s]Processing test images: 215it [01:39,  2.17it/s]Processing test images: 216it [01:40,  2.17it/s]Processing test images: 217it [01:40,  2.17it/s]Processing test images: 218it [01:41,  2.17it/s]Processing test images: 219it [01:41,  2.17it/s]Processing test images: 220it [01:42,  2.17it/s]Processing test images: 221it [01:42,  2.17it/s]Processing test images: 222it [01:43,  2.17it/s]Processing test images: 223it [01:43,  2.17it/s]Processing test images: 224it [01:44,  2.16it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:44,  2.17it/s]Processing test images: 227it [01:45,  2.16it/s]Processing test images: 228it [01:45,  2.16it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.16it/s]Processing test images: 233it [01:48,  2.17it/s]Processing test images: 234it [01:48,  2.17it/s]Processing test images: 235it [01:49,  2.16it/s]Processing test images: 236it [01:49,  2.16it/s]Processing test images: 237it [01:50,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:51,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:51,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.16it/s]Processing test images: 247it [01:54,  2.16it/s]Processing test images: 248it [01:55,  2.16it/s]Processing test images: 249it [01:55,  2.16it/s]Processing test images: 250it [01:56,  2.16it/s]Processing test images: 251it [01:56,  2.16it/s]Processing test images: 252it [01:57,  2.15it/s]Processing test images: 253it [01:57,  2.15it/s]Processing test images: 254it [01:57,  2.15it/s]Processing test images: 255it [01:58,  2.15it/s]Processing test images: 256it [01:58,  2.15it/s]Processing test images: 257it [01:59,  2.15it/s]Processing test images: 258it [01:59,  2.15it/s]Processing test images: 259it [02:00,  2.15it/s]Processing test images: 260it [02:00,  2.15it/s]Processing test images: 261it [02:01,  2.15it/s]Processing test images: 262it [02:01,  2.15it/s]Processing test images: 263it [02:02,  2.15it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:03,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:04,  2.16it/s]Processing test images: 268it [02:04,  2.16it/s]Processing test images: 269it [02:04,  2.16it/s]Processing test images: 270it [02:05,  2.16it/s]Processing test images: 271it [02:05,  2.16it/s]Processing test images: 272it [02:06,  2.16it/s]Processing test images: 273it [02:06,  2.16it/s]Processing test images: 274it [02:07,  2.16it/s]Processing test images: 275it [02:07,  2.16it/s]Processing test images: 276it [02:08,  2.16it/s]Processing test images: 277it [02:08,  2.16it/s]Processing test images: 278it [02:09,  2.16it/s]Processing test images: 279it [02:09,  2.16it/s]Processing test images: 280it [02:10,  2.16it/s]Processing test images: 281it [02:10,  2.16it/s]Processing test images: 282it [02:10,  2.16it/s]Processing test images: 283it [02:11,  2.16it/s]Processing test images: 284it [02:11,  2.16it/s]Processing test images: 285it [02:12,  2.16it/s]Processing test images: 286it [02:12,  2.16it/s]Processing test images: 287it [02:13,  2.16it/s]Processing test images: 288it [02:13,  2.16it/s]Processing test images: 289it [02:14,  2.18it/s]Processing test images: 290it [02:14,  2.24it/s]Processing test images: 291it [02:15,  2.28it/s]Processing test images: 292it [02:15,  2.32it/s]Processing test images: 293it [02:15,  2.34it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:17,  2.37it/s]Processing test images: 297it [02:17,  2.38it/s]Processing test images: 298it [02:17,  2.38it/s]Processing test images: 299it [02:18,  2.39it/s]Processing test images: 300it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:04, 12.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:05,  9.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 12.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:02,  9.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:04<00:00, 12.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.42it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.24it/s]
Making gifs:  20%|██        | 1/5 [00:07<00:31,  7.76s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05,  9.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 12.06it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:02<00:02, 12.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 12.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 12.06it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.90it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.06it/s]
Making gifs:  40%|████      | 2/5 [00:15<00:23,  7.79s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:05,  9.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.56it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 12.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:02<00:02, 11.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:01, 12.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 12.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.65it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.30it/s]
Making gifs:  60%|██████    | 3/5 [00:23<00:15,  7.77s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:06,  9.13it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 12.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04,  9.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 10.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 12.06it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:03,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 12.06it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 12.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00,  9.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.54it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.07it/s]
Making gifs:  80%|████████  | 4/5 [00:31<00:07,  7.78s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 12.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:02<00:02, 11.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 12.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:00, 12.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:01,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.26it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.24it/s]
Making gifs: 100%|██████████| 5/5 [00:38<00:00,  7.79s/it]Making gifs: 100%|██████████| 5/5 [00:38<00:00,  7.78s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.04it/s]Processing test images: 2it [00:01,  1.49it/s]                       Processing test images: 3it [00:01,  1.73it/s]Processing test images: 4it [00:02,  1.86it/s]Processing test images: 5it [00:02,  1.95it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.04it/s]Processing test images: 8it [00:04,  2.08it/s]Processing test images: 9it [00:04,  2.10it/s]Processing test images: 10it [00:05,  2.12it/s]Processing test images: 11it [00:05,  2.13it/s]Processing test images: 12it [00:06,  2.14it/s]Processing test images: 13it [00:06,  2.15it/s]Processing test images: 14it [00:07,  2.16it/s]Processing test images: 15it [00:07,  2.16it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.17it/s]Processing test images: 18it [00:08,  2.17it/s]Processing test images: 19it [00:09,  2.17it/s]Processing test images: 20it [00:09,  2.17it/s]Processing test images: 21it [00:10,  2.17it/s]Processing test images: 22it [00:10,  2.17it/s]Processing test images: 23it [00:11,  2.17it/s]Processing test images: 24it [00:11,  2.17it/s]Processing test images: 25it [00:12,  2.17it/s]Processing test images: 26it [00:12,  2.17it/s]Processing test images: 27it [00:13,  2.17it/s]Processing test images: 28it [00:13,  2.17it/s]Processing test images: 29it [00:13,  2.17it/s]Processing test images: 30it [00:14,  2.17it/s]Processing test images: 31it [00:14,  2.17it/s]Processing test images: 32it [00:15,  2.17it/s]Processing test images: 33it [00:15,  2.17it/s]Processing test images: 34it [00:16,  2.17it/s]Processing test images: 35it [00:16,  2.17it/s]Processing test images: 36it [00:17,  2.17it/s]Processing test images: 37it [00:17,  2.17it/s]Processing test images: 38it [00:18,  2.17it/s]Processing test images: 39it [00:18,  2.17it/s]Processing test images: 40it [00:18,  2.17it/s]Processing test images: 41it [00:19,  2.17it/s]Processing test images: 42it [00:19,  2.17it/s]Processing test images: 43it [00:20,  2.17it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:24,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:25,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.17it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:30,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:31,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:36,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:42,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:43,  2.17it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.17it/s]Processing test images: 102it [00:47,  2.17it/s]Processing test images: 103it [00:48,  2.17it/s]Processing test images: 104it [00:48,  2.17it/s]Processing test images: 105it [00:48,  2.17it/s]Processing test images: 106it [00:49,  2.17it/s]Processing test images: 107it [00:49,  2.17it/s]Processing test images: 108it [00:50,  2.16it/s]Processing test images: 109it [00:50,  2.16it/s]Processing test images: 110it [00:51,  2.16it/s]Processing test images: 111it [00:51,  2.16it/s]Processing test images: 112it [00:52,  2.16it/s]Processing test images: 113it [00:52,  2.16it/s]Processing test images: 114it [00:53,  2.16it/s]Processing test images: 115it [00:53,  2.16it/s]Processing test images: 116it [00:54,  2.17it/s]Processing test images: 117it [00:54,  2.16it/s]Processing test images: 118it [00:54,  2.16it/s]Processing test images: 119it [00:55,  2.16it/s]Processing test images: 120it [00:55,  2.16it/s]Processing test images: 121it [00:56,  2.16it/s]Processing test images: 122it [00:56,  2.16it/s]Processing test images: 123it [00:57,  2.15it/s]Processing test images: 124it [00:57,  2.15it/s]Processing test images: 125it [00:58,  2.15it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.16it/s]Processing test images: 129it [01:00,  2.16it/s]Processing test images: 130it [01:00,  2.16it/s]Processing test images: 131it [01:00,  2.16it/s]Processing test images: 132it [01:01,  2.16it/s]Processing test images: 133it [01:01,  2.16it/s]Processing test images: 134it [01:02,  2.16it/s]Processing test images: 135it [01:02,  2.16it/s]Processing test images: 136it [01:03,  2.16it/s]Processing test images: 137it [01:03,  2.16it/s]Processing test images: 138it [01:04,  2.16it/s]Processing test images: 139it [01:04,  2.16it/s]Processing test images: 140it [01:05,  2.16it/s]Processing test images: 141it [01:05,  2.16it/s]Processing test images: 142it [01:06,  2.16it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:06,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:07,  2.16it/s]Processing test images: 147it [01:08,  2.16it/s]Processing test images: 148it [01:08,  2.16it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:09,  2.16it/s]Processing test images: 151it [01:10,  2.16it/s]Processing test images: 152it [01:10,  2.16it/s]Processing test images: 153it [01:11,  2.16it/s]Processing test images: 154it [01:11,  2.12it/s]Processing test images: 155it [01:12,  2.13it/s]Processing test images: 156it [01:12,  2.14it/s]Processing test images: 157it [01:13,  2.15it/s]Processing test images: 158it [01:13,  2.15it/s]Processing test images: 159it [01:13,  2.16it/s]Processing test images: 160it [01:14,  2.16it/s]Processing test images: 161it [01:14,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.16it/s]Processing test images: 167it [01:17,  2.16it/s]Processing test images: 168it [01:18,  2.16it/s]Processing test images: 169it [01:18,  2.16it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.16it/s]Processing test images: 172it [01:19,  2.17it/s]Processing test images: 173it [01:20,  2.16it/s]Processing test images: 174it [01:20,  2.17it/s]Processing test images: 175it [01:21,  2.17it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.17it/s]Processing test images: 178it [01:22,  2.17it/s]Processing test images: 179it [01:23,  2.17it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:24,  2.17it/s]Processing test images: 182it [01:24,  2.17it/s]Processing test images: 183it [01:25,  2.17it/s]Processing test images: 184it [01:25,  2.17it/s]Processing test images: 185it [01:25,  2.17it/s]Processing test images: 186it [01:26,  2.17it/s]Processing test images: 187it [01:26,  2.17it/s]Processing test images: 188it [01:27,  2.17it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.17it/s]Processing test images: 193it [01:29,  2.17it/s]Processing test images: 194it [01:30,  2.17it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:31,  2.17it/s]Processing test images: 197it [01:31,  2.17it/s]Processing test images: 198it [01:31,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:32,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.17it/s]Processing test images: 208it [01:36,  2.17it/s]Processing test images: 209it [01:37,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:37,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:38,  2.16it/s]Processing test images: 214it [01:39,  2.16it/s]Processing test images: 215it [01:39,  2.17it/s]Processing test images: 216it [01:40,  2.17it/s]Processing test images: 217it [01:40,  2.17it/s]Processing test images: 218it [01:41,  2.17it/s]Processing test images: 219it [01:41,  2.17it/s]Processing test images: 220it [01:42,  2.17it/s]Processing test images: 221it [01:42,  2.17it/s]Processing test images: 222it [01:43,  2.17it/s]Processing test images: 223it [01:43,  2.17it/s]Processing test images: 224it [01:43,  2.17it/s]Processing test images: 225it [01:44,  2.17it/s]Processing test images: 226it [01:44,  2.17it/s]Processing test images: 227it [01:45,  2.17it/s]Processing test images: 228it [01:45,  2.17it/s]Processing test images: 229it [01:46,  2.17it/s]Processing test images: 230it [01:46,  2.17it/s]Processing test images: 231it [01:47,  2.17it/s]Processing test images: 232it [01:47,  2.17it/s]Processing test images: 233it [01:48,  2.17it/s]Processing test images: 234it [01:48,  2.17it/s]Processing test images: 235it [01:49,  2.17it/s]Processing test images: 236it [01:49,  2.17it/s]Processing test images: 237it [01:49,  2.17it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:50,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:51,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.16it/s]Processing test images: 247it [01:54,  2.16it/s]Processing test images: 248it [01:55,  2.15it/s]Processing test images: 249it [01:55,  2.15it/s]Processing test images: 250it [01:55,  2.15it/s]Processing test images: 251it [01:56,  2.15it/s]Processing test images: 252it [01:56,  2.15it/s]Processing test images: 253it [01:57,  2.15it/s]Processing test images: 254it [01:57,  2.15it/s]Processing test images: 255it [01:58,  2.16it/s]Processing test images: 256it [01:58,  2.16it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.16it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.16it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:02,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:03,  2.16it/s]Processing test images: 268it [02:04,  2.16it/s]Processing test images: 269it [02:04,  2.16it/s]Processing test images: 270it [02:05,  2.16it/s]Processing test images: 271it [02:05,  2.16it/s]Processing test images: 272it [02:06,  2.16it/s]Processing test images: 273it [02:06,  2.17it/s]Processing test images: 274it [02:07,  2.16it/s]Processing test images: 275it [02:07,  2.16it/s]Processing test images: 276it [02:08,  2.16it/s]Processing test images: 277it [02:08,  2.16it/s]Processing test images: 278it [02:08,  2.16it/s]Processing test images: 279it [02:09,  2.16it/s]Processing test images: 280it [02:09,  2.16it/s]Processing test images: 281it [02:10,  2.16it/s]Processing test images: 282it [02:10,  2.16it/s]Processing test images: 283it [02:11,  2.16it/s]Processing test images: 284it [02:11,  2.16it/s]Processing test images: 285it [02:12,  2.16it/s]Processing test images: 286it [02:12,  2.16it/s]Processing test images: 287it [02:13,  2.16it/s]Processing test images: 288it [02:13,  2.16it/s]Processing test images: 289it [02:14,  2.18it/s]Processing test images: 290it [02:14,  2.24it/s]Processing test images: 291it [02:14,  2.28it/s]Processing test images: 292it [02:15,  2.31it/s]Processing test images: 293it [02:15,  2.33it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:16,  2.37it/s]Processing test images: 297it [02:17,  2.37it/s]Processing test images: 298it [02:17,  2.37it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:05, 11.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 11.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 11.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:01<00:06,  8.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.16it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.18it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.18it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:03<00:02, 11.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02,  9.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:04<00:02, 10.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:04<00:01, 10.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.18it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:05<00:01,  9.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:05<00:01,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.11it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:06<00:00, 11.29it/s][AWriting gif images: 100%|██████████| 64/64 [00:06<00:00, 10.55it/s]
Making gifs:  20%|██        | 1/5 [00:08<00:32,  8.21s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:10,  6.09it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:07,  8.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:06,  9.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:01<00:04, 10.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:05,  9.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.06it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:03<00:03,  9.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:03<00:03,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:04<00:02,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:05<00:00, 11.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:06<00:00, 11.02it/s][AWriting gif images: 100%|██████████| 64/64 [00:06<00:00, 10.51it/s]
Making gifs:  40%|████      | 2/5 [00:16<00:24,  8.19s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05,  9.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.82it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.00it/s]
Making gifs:  60%|██████    | 3/5 [00:24<00:16,  8.08s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:05,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.62it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.24it/s]
Making gifs:  80%|████████  | 4/5 [00:32<00:07,  7.96s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:06,  9.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.14it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 10.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:03,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01,  9.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.45it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.98it/s]
Making gifs: 100%|██████████| 5/5 [00:40<00:00,  7.96s/it]Making gifs: 100%|██████████| 5/5 [00:40<00:00,  8.02s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.00it/s]Processing test images: 2it [00:01,  1.46it/s]                       Processing test images: 3it [00:01,  1.71it/s]Processing test images: 4it [00:02,  1.85it/s]Processing test images: 5it [00:02,  1.94it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.05it/s]Processing test images: 8it [00:04,  2.04it/s]Processing test images: 9it [00:04,  2.08it/s]Processing test images: 10it [00:05,  2.11it/s]Processing test images: 11it [00:05,  2.13it/s]Processing test images: 12it [00:06,  2.14it/s]Processing test images: 13it [00:06,  2.15it/s]Processing test images: 14it [00:07,  2.15it/s]Processing test images: 15it [00:07,  2.16it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.16it/s]Processing test images: 18it [00:08,  2.16it/s]Processing test images: 19it [00:09,  2.16it/s]Processing test images: 20it [00:09,  2.16it/s]Processing test images: 21it [00:10,  2.16it/s]Processing test images: 22it [00:10,  2.15it/s]Processing test images: 23it [00:11,  2.16it/s]Processing test images: 24it [00:11,  2.15it/s]Processing test images: 25it [00:12,  2.16it/s]Processing test images: 26it [00:12,  2.16it/s]Processing test images: 27it [00:13,  2.16it/s]Processing test images: 28it [00:13,  2.16it/s]Processing test images: 29it [00:14,  2.16it/s]Processing test images: 30it [00:14,  2.16it/s]Processing test images: 31it [00:14,  2.16it/s]Processing test images: 32it [00:15,  2.16it/s]Processing test images: 33it [00:15,  2.16it/s]Processing test images: 34it [00:16,  2.16it/s]Processing test images: 35it [00:16,  2.16it/s]Processing test images: 36it [00:17,  2.16it/s]Processing test images: 37it [00:17,  2.16it/s]Processing test images: 38it [00:18,  2.16it/s]Processing test images: 39it [00:18,  2.16it/s]Processing test images: 40it [00:19,  2.16it/s]Processing test images: 41it [00:19,  2.16it/s]Processing test images: 42it [00:20,  2.16it/s]Processing test images: 43it [00:20,  2.17it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:25,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:26,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.17it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:31,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:32,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:43,  2.16it/s]Processing test images: 95it [00:44,  2.15it/s]Processing test images: 96it [00:44,  2.15it/s]Processing test images: 97it [00:45,  2.15it/s]Processing test images: 98it [00:45,  2.15it/s]Processing test images: 99it [00:46,  2.16it/s]Processing test images: 100it [00:46,  2.16it/s]Processing test images: 101it [00:47,  2.16it/s]Processing test images: 102it [00:47,  2.15it/s]Processing test images: 103it [00:48,  2.16it/s]Processing test images: 104it [00:48,  2.16it/s]Processing test images: 105it [00:49,  2.16it/s]Processing test images: 106it [00:49,  2.16it/s]Processing test images: 107it [00:50,  2.16it/s]Processing test images: 108it [00:50,  2.16it/s]Processing test images: 109it [00:50,  2.15it/s]Processing test images: 110it [00:51,  2.14it/s]Processing test images: 111it [00:51,  2.14it/s]Processing test images: 112it [00:52,  2.14it/s]Processing test images: 113it [00:52,  2.14it/s]Processing test images: 114it [00:53,  2.14it/s]Processing test images: 115it [00:53,  2.14it/s]Processing test images: 116it [00:54,  2.14it/s]Processing test images: 117it [00:54,  2.14it/s]Processing test images: 118it [00:55,  2.14it/s]Processing test images: 119it [00:55,  2.14it/s]Processing test images: 120it [00:56,  2.14it/s]Processing test images: 121it [00:56,  2.14it/s]Processing test images: 122it [00:57,  2.14it/s]Processing test images: 123it [00:57,  2.14it/s]Processing test images: 124it [00:57,  2.14it/s]Processing test images: 125it [00:58,  2.15it/s]Processing test images: 126it [00:58,  2.15it/s]Processing test images: 127it [00:59,  2.15it/s]Processing test images: 128it [00:59,  2.15it/s]Processing test images: 129it [01:00,  2.15it/s]Processing test images: 130it [01:00,  2.15it/s]Processing test images: 131it [01:01,  2.15it/s]Processing test images: 132it [01:01,  2.15it/s]Processing test images: 133it [01:02,  2.15it/s]Processing test images: 134it [01:02,  2.15it/s]Processing test images: 135it [01:03,  2.15it/s]Processing test images: 136it [01:03,  2.15it/s]Processing test images: 137it [01:04,  2.15it/s]Processing test images: 138it [01:04,  2.16it/s]Processing test images: 139it [01:04,  2.15it/s]Processing test images: 140it [01:05,  2.15it/s]Processing test images: 141it [01:05,  2.15it/s]Processing test images: 142it [01:06,  2.15it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:07,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:08,  2.16it/s]Processing test images: 147it [01:08,  2.16it/s]Processing test images: 148it [01:09,  2.16it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:10,  2.16it/s]Processing test images: 151it [01:10,  2.16it/s]Processing test images: 152it [01:10,  2.16it/s]Processing test images: 153it [01:11,  2.16it/s]Processing test images: 154it [01:11,  2.16it/s]Processing test images: 155it [01:12,  2.16it/s]Processing test images: 156it [01:12,  2.16it/s]Processing test images: 157it [01:13,  2.16it/s]Processing test images: 158it [01:13,  2.15it/s]Processing test images: 159it [01:14,  2.15it/s]Processing test images: 160it [01:14,  2.15it/s]Processing test images: 161it [01:15,  2.16it/s]Processing test images: 162it [01:15,  2.15it/s]Processing test images: 163it [01:16,  2.15it/s]Processing test images: 164it [01:16,  2.15it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.16it/s]Processing test images: 167it [01:17,  2.16it/s]Processing test images: 168it [01:18,  2.15it/s]Processing test images: 169it [01:18,  2.15it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.15it/s]Processing test images: 172it [01:20,  2.15it/s]Processing test images: 173it [01:20,  2.15it/s]Processing test images: 174it [01:21,  2.16it/s]Processing test images: 175it [01:21,  2.15it/s]Processing test images: 176it [01:22,  2.16it/s]Processing test images: 177it [01:22,  2.15it/s]Processing test images: 178it [01:23,  2.16it/s]Processing test images: 179it [01:23,  2.16it/s]Processing test images: 180it [01:23,  2.16it/s]Processing test images: 181it [01:24,  2.16it/s]Processing test images: 182it [01:24,  2.16it/s]Processing test images: 183it [01:25,  2.16it/s]Processing test images: 184it [01:25,  2.16it/s]Processing test images: 185it [01:26,  2.16it/s]Processing test images: 186it [01:26,  2.16it/s]Processing test images: 187it [01:27,  2.16it/s]Processing test images: 188it [01:27,  2.16it/s]Processing test images: 189it [01:28,  2.16it/s]Processing test images: 190it [01:28,  2.16it/s]Processing test images: 191it [01:29,  2.16it/s]Processing test images: 192it [01:29,  2.16it/s]Processing test images: 193it [01:29,  2.16it/s]Processing test images: 194it [01:30,  2.16it/s]Processing test images: 195it [01:30,  2.16it/s]Processing test images: 196it [01:31,  2.15it/s]Processing test images: 197it [01:31,  2.15it/s]Processing test images: 198it [01:32,  2.15it/s]Processing test images: 199it [01:32,  2.15it/s]Processing test images: 200it [01:33,  2.15it/s]Processing test images: 201it [01:33,  2.15it/s]Processing test images: 202it [01:34,  2.15it/s]Processing test images: 203it [01:34,  2.15it/s]Processing test images: 204it [01:35,  2.15it/s]Processing test images: 205it [01:35,  2.15it/s]Processing test images: 206it [01:36,  2.15it/s]Processing test images: 207it [01:36,  2.15it/s]Processing test images: 208it [01:36,  2.15it/s]Processing test images: 209it [01:37,  2.15it/s]Processing test images: 210it [01:37,  2.15it/s]Processing test images: 211it [01:38,  2.15it/s]Processing test images: 212it [01:38,  2.15it/s]Processing test images: 213it [01:39,  2.15it/s]Processing test images: 214it [01:39,  2.15it/s]Processing test images: 215it [01:40,  2.15it/s]Processing test images: 216it [01:40,  2.15it/s]Processing test images: 217it [01:41,  2.15it/s]Processing test images: 218it [01:41,  2.15it/s]Processing test images: 219it [01:42,  2.15it/s]Processing test images: 220it [01:42,  2.15it/s]Processing test images: 221it [01:42,  2.15it/s]Processing test images: 222it [01:43,  2.15it/s]Processing test images: 223it [01:43,  2.15it/s]Processing test images: 224it [01:44,  2.15it/s]Processing test images: 225it [01:44,  2.14it/s]Processing test images: 226it [01:45,  2.14it/s]Processing test images: 227it [01:45,  2.14it/s]Processing test images: 228it [01:46,  2.14it/s]Processing test images: 229it [01:46,  2.14it/s]Processing test images: 230it [01:47,  2.14it/s]Processing test images: 231it [01:47,  2.14it/s]Processing test images: 232it [01:48,  2.14it/s]Processing test images: 233it [01:48,  2.15it/s]Processing test images: 234it [01:49,  2.15it/s]Processing test images: 235it [01:49,  2.15it/s]Processing test images: 236it [01:49,  2.14it/s]Processing test images: 237it [01:50,  2.14it/s]Processing test images: 238it [01:50,  2.15it/s]Processing test images: 239it [01:51,  2.14it/s]Processing test images: 240it [01:51,  2.15it/s]Processing test images: 241it [01:52,  2.15it/s]Processing test images: 242it [01:52,  2.15it/s]Processing test images: 243it [01:53,  2.15it/s]Processing test images: 244it [01:53,  2.15it/s]Processing test images: 245it [01:54,  2.15it/s]Processing test images: 246it [01:54,  2.15it/s]Processing test images: 247it [01:55,  2.15it/s]Processing test images: 248it [01:55,  2.15it/s]Processing test images: 249it [01:56,  2.15it/s]Processing test images: 250it [01:56,  2.15it/s]Processing test images: 251it [01:56,  2.15it/s]Processing test images: 252it [01:57,  2.15it/s]Processing test images: 253it [01:57,  2.15it/s]Processing test images: 254it [01:58,  2.15it/s]Processing test images: 255it [01:58,  2.15it/s]Processing test images: 256it [01:59,  2.16it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [02:00,  2.16it/s]Processing test images: 259it [02:00,  2.15it/s]Processing test images: 260it [02:01,  2.15it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:02,  2.16it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:03,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:04,  2.16it/s]Processing test images: 268it [02:04,  2.16it/s]Processing test images: 269it [02:05,  2.16it/s]Processing test images: 270it [02:05,  2.16it/s]Processing test images: 271it [02:06,  2.16it/s]Processing test images: 272it [02:06,  2.15it/s]Processing test images: 273it [02:07,  2.16it/s]Processing test images: 274it [02:07,  2.15it/s]Processing test images: 275it [02:08,  2.15it/s]Processing test images: 276it [02:08,  2.15it/s]Processing test images: 277it [02:09,  2.16it/s]Processing test images: 278it [02:09,  2.15it/s]Processing test images: 279it [02:09,  2.16it/s]Processing test images: 280it [02:10,  2.16it/s]Processing test images: 281it [02:10,  2.16it/s]Processing test images: 282it [02:11,  2.15it/s]Processing test images: 283it [02:11,  2.15it/s]Processing test images: 284it [02:12,  2.15it/s]Processing test images: 285it [02:12,  2.15it/s]Processing test images: 286it [02:13,  2.15it/s]Processing test images: 287it [02:13,  2.15it/s]Processing test images: 288it [02:14,  2.15it/s]Processing test images: 289it [02:14,  2.17it/s]Processing test images: 290it [02:15,  2.23it/s]Processing test images: 291it [02:15,  2.27it/s]Processing test images: 292it [02:15,  2.30it/s]Processing test images: 293it [02:16,  2.32it/s]Processing test images: 294it [02:16,  2.34it/s]Processing test images: 295it [02:17,  2.35it/s]Processing test images: 296it [02:17,  2.36it/s]Processing test images: 297it [02:17,  2.37it/s]Processing test images: 298it [02:18,  2.37it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:19,  2.37it/s]Processing test images: 300it [02:19,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:02<00:35,  1.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:02<00:20,  2.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:02<00:13,  4.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:02<00:10,  5.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:02<00:07,  6.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:02<00:06,  7.77it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:03<00:05,  8.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:03<00:05,  8.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:03<00:04,  9.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:03<00:04,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:03<00:03, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:03<00:03, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:04<00:03, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:04<00:02, 11.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:04<00:03,  9.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:04<00:02, 10.26it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:04<00:02, 10.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:05<00:02, 11.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:05<00:02, 11.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:05<00:01, 11.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:05<00:01, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:05<00:01,  9.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:06<00:01, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:06<00:01, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:06<00:01, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:06<00:00, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:06<00:00, 11.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:06<00:00, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:07<00:00,  9.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:07<00:00, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:07<00:00, 10.87it/s][AWriting gif images: 100%|██████████| 64/64 [00:07<00:00,  8.59it/s]
Making gifs:  20%|██        | 1/5 [00:09<00:38,  9.52s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05,  9.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05, 10.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 11.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02,  9.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01,  9.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.90it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.14it/s]
Making gifs:  40%|████      | 2/5 [00:17<00:25,  8.64s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.21it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 12.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04,  9.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:02,  9.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.26it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:04<00:00, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.24it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.13it/s]
Making gifs:  60%|██████    | 3/5 [00:25<00:16,  8.28s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.16it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.21it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:06,  9.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.19it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.74it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.89it/s]
Making gifs:  80%|████████  | 4/5 [00:33<00:08,  8.16s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.21it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:05,  9.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.58it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.77it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03,  9.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 10.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.55it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02,  9.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.26it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00,  9.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.26it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.55it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.15it/s]
Making gifs: 100%|██████████| 5/5 [00:41<00:00,  8.03s/it]Making gifs: 100%|██████████| 5/5 [00:41<00:00,  8.24s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.03it/s]Processing test images: 2it [00:01,  1.48it/s]                       Processing test images: 3it [00:01,  1.72it/s]Processing test images: 4it [00:02,  1.86it/s]Processing test images: 5it [00:02,  1.94it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.04it/s]Processing test images: 8it [00:04,  2.08it/s]Processing test images: 9it [00:04,  2.10it/s]Processing test images: 10it [00:05,  2.12it/s]Processing test images: 11it [00:05,  2.13it/s]Processing test images: 12it [00:06,  2.14it/s]Processing test images: 13it [00:06,  2.15it/s]Processing test images: 14it [00:07,  2.15it/s]Processing test images: 15it [00:07,  2.15it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.16it/s]Processing test images: 18it [00:08,  2.16it/s]Processing test images: 19it [00:09,  2.16it/s]Processing test images: 20it [00:09,  2.16it/s]Processing test images: 21it [00:10,  2.16it/s]Processing test images: 22it [00:10,  2.16it/s]Processing test images: 23it [00:11,  2.16it/s]Processing test images: 24it [00:11,  2.16it/s]Processing test images: 25it [00:12,  2.16it/s]Processing test images: 26it [00:12,  2.16it/s]Processing test images: 27it [00:13,  2.16it/s]Processing test images: 28it [00:13,  2.16it/s]Processing test images: 29it [00:13,  2.17it/s]Processing test images: 30it [00:14,  2.17it/s]Processing test images: 31it [00:14,  2.17it/s]Processing test images: 32it [00:15,  2.16it/s]Processing test images: 33it [00:15,  2.17it/s]Processing test images: 34it [00:16,  2.17it/s]Processing test images: 35it [00:16,  2.17it/s]Processing test images: 36it [00:17,  2.17it/s]Processing test images: 37it [00:17,  2.17it/s]Processing test images: 38it [00:18,  2.17it/s]Processing test images: 39it [00:18,  2.17it/s]Processing test images: 40it [00:19,  2.16it/s]Processing test images: 41it [00:19,  2.16it/s]Processing test images: 42it [00:19,  2.16it/s]Processing test images: 43it [00:20,  2.16it/s]Processing test images: 44it [00:20,  2.16it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.16it/s]Processing test images: 53it [00:25,  2.16it/s]Processing test images: 54it [00:25,  2.16it/s]Processing test images: 55it [00:25,  2.16it/s]Processing test images: 56it [00:26,  2.16it/s]Processing test images: 57it [00:26,  2.16it/s]Processing test images: 58it [00:27,  2.16it/s]Processing test images: 59it [00:27,  2.16it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.16it/s]Processing test images: 65it [00:30,  2.16it/s]Processing test images: 66it [00:31,  2.16it/s]Processing test images: 67it [00:31,  2.16it/s]Processing test images: 68it [00:31,  2.16it/s]Processing test images: 69it [00:32,  2.16it/s]Processing test images: 70it [00:32,  2.16it/s]Processing test images: 71it [00:33,  2.16it/s]Processing test images: 72it [00:33,  2.16it/s]Processing test images: 73it [00:34,  2.16it/s]Processing test images: 74it [00:34,  2.16it/s]Processing test images: 75it [00:35,  2.16it/s]Processing test images: 76it [00:35,  2.16it/s]Processing test images: 77it [00:36,  2.16it/s]Processing test images: 78it [00:36,  2.16it/s]Processing test images: 79it [00:37,  2.16it/s]Processing test images: 80it [00:37,  2.16it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:43,  2.17it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.16it/s]Processing test images: 100it [00:46,  2.16it/s]Processing test images: 101it [00:47,  2.15it/s]Processing test images: 102it [00:47,  2.15it/s]Processing test images: 103it [00:48,  2.15it/s]Processing test images: 104it [00:48,  2.15it/s]Processing test images: 105it [00:49,  2.15it/s]Processing test images: 106it [00:49,  2.15it/s]Processing test images: 107it [00:50,  2.15it/s]Processing test images: 108it [00:50,  2.16it/s]Processing test images: 109it [00:50,  2.16it/s]Processing test images: 110it [00:51,  2.16it/s]Processing test images: 111it [00:51,  2.16it/s]Processing test images: 112it [00:52,  2.16it/s]Processing test images: 113it [00:52,  2.16it/s]Processing test images: 114it [00:53,  2.16it/s]Processing test images: 115it [00:53,  2.16it/s]Processing test images: 116it [00:54,  2.16it/s]Processing test images: 117it [00:54,  2.17it/s]Processing test images: 118it [00:55,  2.17it/s]Processing test images: 119it [00:55,  2.17it/s]Processing test images: 120it [00:56,  2.17it/s]Processing test images: 121it [00:56,  2.16it/s]Processing test images: 122it [00:56,  2.16it/s]Processing test images: 123it [00:57,  2.16it/s]Processing test images: 124it [00:57,  2.16it/s]Processing test images: 125it [00:58,  2.15it/s]Processing test images: 126it [00:58,  2.15it/s]Processing test images: 127it [00:59,  2.15it/s]Processing test images: 128it [00:59,  2.15it/s]Processing test images: 129it [01:00,  2.15it/s]Processing test images: 130it [01:00,  2.15it/s]Processing test images: 131it [01:01,  2.15it/s]Processing test images: 132it [01:01,  2.15it/s]Processing test images: 133it [01:02,  2.15it/s]Processing test images: 134it [01:02,  2.15it/s]Processing test images: 135it [01:02,  2.15it/s]Processing test images: 136it [01:03,  2.15it/s]Processing test images: 137it [01:03,  2.15it/s]Processing test images: 138it [01:04,  2.15it/s]Processing test images: 139it [01:04,  2.15it/s]Processing test images: 140it [01:05,  2.15it/s]Processing test images: 141it [01:05,  2.15it/s]Processing test images: 142it [01:06,  2.15it/s]Processing test images: 143it [01:06,  2.15it/s]Processing test images: 144it [01:07,  2.15it/s]Processing test images: 145it [01:07,  2.15it/s]Processing test images: 146it [01:08,  2.15it/s]Processing test images: 147it [01:08,  2.15it/s]Processing test images: 148it [01:09,  2.15it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:09,  2.16it/s]Processing test images: 151it [01:10,  2.16it/s]Processing test images: 152it [01:10,  2.17it/s]Processing test images: 153it [01:11,  2.17it/s]Processing test images: 154it [01:11,  2.17it/s]Processing test images: 155it [01:12,  2.17it/s]Processing test images: 156it [01:12,  2.17it/s]Processing test images: 157it [01:13,  2.17it/s]Processing test images: 158it [01:13,  2.16it/s]Processing test images: 159it [01:14,  2.16it/s]Processing test images: 160it [01:14,  2.16it/s]Processing test images: 161it [01:15,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.16it/s]Processing test images: 167it [01:17,  2.16it/s]Processing test images: 168it [01:18,  2.16it/s]Processing test images: 169it [01:18,  2.16it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.16it/s]Processing test images: 172it [01:20,  2.16it/s]Processing test images: 173it [01:20,  2.16it/s]Processing test images: 174it [01:21,  2.16it/s]Processing test images: 175it [01:21,  2.16it/s]Processing test images: 176it [01:21,  2.16it/s]Processing test images: 177it [01:22,  2.16it/s]Processing test images: 178it [01:22,  2.16it/s]Processing test images: 179it [01:23,  2.16it/s]Processing test images: 180it [01:23,  2.16it/s]Processing test images: 181it [01:24,  2.16it/s]Processing test images: 182it [01:24,  2.16it/s]Processing test images: 183it [01:25,  2.16it/s]Processing test images: 184it [01:25,  2.16it/s]Processing test images: 185it [01:26,  2.16it/s]Processing test images: 186it [01:26,  2.16it/s]Processing test images: 187it [01:27,  2.16it/s]Processing test images: 188it [01:27,  2.16it/s]Processing test images: 189it [01:27,  2.16it/s]Processing test images: 190it [01:28,  2.16it/s]Processing test images: 191it [01:28,  2.16it/s]Processing test images: 192it [01:29,  2.16it/s]Processing test images: 193it [01:29,  2.16it/s]Processing test images: 194it [01:30,  2.16it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:31,  2.17it/s]Processing test images: 197it [01:31,  2.17it/s]Processing test images: 198it [01:32,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:33,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.17it/s]Processing test images: 208it [01:36,  2.17it/s]Processing test images: 209it [01:37,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:38,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:39,  2.17it/s]Processing test images: 214it [01:39,  2.17it/s]Processing test images: 215it [01:39,  2.16it/s]Processing test images: 216it [01:40,  2.16it/s]Processing test images: 217it [01:40,  2.16it/s]Processing test images: 218it [01:41,  2.16it/s]Processing test images: 219it [01:41,  2.17it/s]Processing test images: 220it [01:42,  2.17it/s]Processing test images: 221it [01:42,  2.16it/s]Processing test images: 222it [01:43,  2.16it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:44,  2.17it/s]Processing test images: 225it [01:44,  2.17it/s]Processing test images: 226it [01:45,  2.17it/s]Processing test images: 227it [01:45,  2.15it/s]Processing test images: 228it [01:46,  2.15it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.16it/s]Processing test images: 233it [01:48,  2.16it/s]Processing test images: 234it [01:48,  2.17it/s]Processing test images: 235it [01:49,  2.17it/s]Processing test images: 236it [01:49,  2.17it/s]Processing test images: 237it [01:50,  2.17it/s]Processing test images: 238it [01:50,  2.17it/s]Processing test images: 239it [01:51,  2.17it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:52,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.16it/s]Processing test images: 247it [01:54,  2.16it/s]Processing test images: 248it [01:55,  2.16it/s]Processing test images: 249it [01:55,  2.16it/s]Processing test images: 250it [01:56,  2.16it/s]Processing test images: 251it [01:56,  2.16it/s]Processing test images: 252it [01:57,  2.16it/s]Processing test images: 253it [01:57,  2.16it/s]Processing test images: 254it [01:58,  2.16it/s]Processing test images: 255it [01:58,  2.16it/s]Processing test images: 256it [01:58,  2.16it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.16it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.17it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.17it/s]Processing test images: 265it [02:03,  2.17it/s]Processing test images: 266it [02:03,  2.17it/s]Processing test images: 267it [02:04,  2.17it/s]Processing test images: 268it [02:04,  2.17it/s]Processing test images: 269it [02:04,  2.17it/s]Processing test images: 270it [02:05,  2.17it/s]Processing test images: 271it [02:05,  2.17it/s]Processing test images: 272it [02:06,  2.17it/s]Processing test images: 273it [02:06,  2.17it/s]Processing test images: 274it [02:07,  2.17it/s]Processing test images: 275it [02:07,  2.17it/s]Processing test images: 276it [02:08,  2.17it/s]Processing test images: 277it [02:08,  2.17it/s]Processing test images: 278it [02:09,  2.17it/s]Processing test images: 279it [02:09,  2.17it/s]Processing test images: 280it [02:10,  2.17it/s]Processing test images: 281it [02:10,  2.17it/s]Processing test images: 282it [02:10,  2.17it/s]Processing test images: 283it [02:11,  2.17it/s]Processing test images: 284it [02:11,  2.17it/s]Processing test images: 285it [02:12,  2.17it/s]Processing test images: 286it [02:12,  2.17it/s]Processing test images: 287it [02:13,  2.17it/s]Processing test images: 288it [02:13,  2.17it/s]Processing test images: 289it [02:14,  2.17it/s]Processing test images: 290it [02:14,  2.21it/s]Processing test images: 291it [02:15,  2.26it/s]Processing test images: 292it [02:15,  2.30it/s]Processing test images: 293it [02:15,  2.33it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:17,  2.37it/s]Processing test images: 297it [02:17,  2.38it/s]Processing test images: 298it [02:17,  2.38it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.18it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.21it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.77it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:01,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.83it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.19it/s]
Making gifs:  20%|██        | 1/5 [00:07<00:31,  7.77s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:07,  8.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.58it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04,  9.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.94it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.98it/s]
Making gifs:  40%|████      | 2/5 [00:15<00:23,  7.86s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05,  9.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05, 10.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 11.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.95it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.22it/s]
Making gifs:  60%|██████    | 3/5 [00:23<00:15,  7.85s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:08,  6.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:06,  9.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05, 10.49it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 11.15it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.55it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04,  9.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:04<00:02,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.34it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.99it/s]
Making gifs:  80%|████████  | 4/5 [00:33<00:08,  8.66s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05,  9.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.83it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.99it/s]
Making gifs: 100%|██████████| 5/5 [00:41<00:00,  8.38s/it]Making gifs: 100%|██████████| 5/5 [00:41<00:00,  8.27s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.02it/s]Processing test images: 2it [00:01,  1.47it/s]                       Processing test images: 3it [00:01,  1.72it/s]Processing test images: 4it [00:02,  1.86it/s]Processing test images: 5it [00:02,  1.94it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.04it/s]Processing test images: 8it [00:04,  2.08it/s]Processing test images: 9it [00:04,  2.11it/s]Processing test images: 10it [00:05,  2.09it/s]Processing test images: 11it [00:05,  2.11it/s]Processing test images: 12it [00:06,  2.13it/s]Processing test images: 13it [00:06,  2.14it/s]Processing test images: 14it [00:07,  2.14it/s]Processing test images: 15it [00:07,  2.15it/s]Processing test images: 16it [00:07,  2.15it/s]Processing test images: 17it [00:08,  2.15it/s]Processing test images: 18it [00:08,  2.15it/s]Processing test images: 19it [00:09,  2.15it/s]Processing test images: 20it [00:09,  2.15it/s]Processing test images: 21it [00:10,  2.16it/s]Processing test images: 22it [00:10,  2.16it/s]Processing test images: 23it [00:11,  2.16it/s]Processing test images: 24it [00:11,  2.16it/s]Processing test images: 25it [00:12,  2.16it/s]Processing test images: 26it [00:12,  2.16it/s]Processing test images: 27it [00:13,  2.16it/s]Processing test images: 28it [00:13,  2.16it/s]Processing test images: 29it [00:14,  2.15it/s]Processing test images: 30it [00:14,  2.16it/s]Processing test images: 31it [00:14,  2.16it/s]Processing test images: 32it [00:15,  2.16it/s]Processing test images: 33it [00:15,  2.16it/s]Processing test images: 34it [00:16,  2.16it/s]Processing test images: 35it [00:16,  2.16it/s]Processing test images: 36it [00:17,  2.16it/s]Processing test images: 37it [00:17,  2.16it/s]Processing test images: 38it [00:18,  2.16it/s]Processing test images: 39it [00:18,  2.16it/s]Processing test images: 40it [00:19,  2.16it/s]Processing test images: 41it [00:19,  2.16it/s]Processing test images: 42it [00:20,  2.17it/s]Processing test images: 43it [00:20,  2.17it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:25,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:26,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.16it/s]Processing test images: 60it [00:28,  2.16it/s]Processing test images: 61it [00:28,  2.16it/s]Processing test images: 62it [00:29,  2.16it/s]Processing test images: 63it [00:29,  2.16it/s]Processing test images: 64it [00:30,  2.16it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:31,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:32,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.16it/s]Processing test images: 80it [00:37,  2.16it/s]Processing test images: 81it [00:38,  2.16it/s]Processing test images: 82it [00:38,  2.16it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.16it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.16it/s]Processing test images: 90it [00:42,  2.16it/s]Processing test images: 91it [00:42,  2.16it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:44,  2.16it/s]Processing test images: 95it [00:44,  2.16it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.16it/s]Processing test images: 101it [00:47,  2.16it/s]Processing test images: 102it [00:47,  2.16it/s]Processing test images: 103it [00:48,  2.16it/s]Processing test images: 104it [00:48,  2.16it/s]Processing test images: 105it [00:49,  2.16it/s]Processing test images: 106it [00:49,  2.16it/s]Processing test images: 107it [00:50,  2.17it/s]Processing test images: 108it [00:50,  2.17it/s]Processing test images: 109it [00:50,  2.17it/s]Processing test images: 110it [00:51,  2.16it/s]Processing test images: 111it [00:51,  2.15it/s]Processing test images: 112it [00:52,  2.15it/s]Processing test images: 113it [00:52,  2.15it/s]Processing test images: 114it [00:53,  2.15it/s]Processing test images: 115it [00:53,  2.15it/s]Processing test images: 116it [00:54,  2.15it/s]Processing test images: 117it [00:54,  2.15it/s]Processing test images: 118it [00:55,  2.15it/s]Processing test images: 119it [00:55,  2.15it/s]Processing test images: 120it [00:56,  2.15it/s]Processing test images: 121it [00:56,  2.15it/s]Processing test images: 122it [00:57,  2.15it/s]Processing test images: 123it [00:57,  2.15it/s]Processing test images: 124it [00:57,  2.15it/s]Processing test images: 125it [00:58,  2.16it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.16it/s]Processing test images: 129it [01:00,  2.16it/s]Processing test images: 130it [01:00,  2.16it/s]Processing test images: 131it [01:01,  2.16it/s]Processing test images: 132it [01:01,  2.16it/s]Processing test images: 133it [01:02,  2.16it/s]Processing test images: 134it [01:02,  2.16it/s]Processing test images: 135it [01:03,  2.16it/s]Processing test images: 136it [01:03,  2.16it/s]Processing test images: 137it [01:03,  2.16it/s]Processing test images: 138it [01:04,  2.16it/s]Processing test images: 139it [01:04,  2.16it/s]Processing test images: 140it [01:05,  2.16it/s]Processing test images: 141it [01:05,  2.16it/s]Processing test images: 142it [01:06,  2.16it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:07,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:08,  2.16it/s]Processing test images: 147it [01:08,  2.16it/s]Processing test images: 148it [01:09,  2.16it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:09,  2.16it/s]Processing test images: 151it [01:10,  2.16it/s]Processing test images: 152it [01:10,  2.16it/s]Processing test images: 153it [01:11,  2.16it/s]Processing test images: 154it [01:11,  2.16it/s]Processing test images: 155it [01:12,  2.16it/s]Processing test images: 156it [01:12,  2.16it/s]Processing test images: 157it [01:13,  2.16it/s]Processing test images: 158it [01:13,  2.16it/s]Processing test images: 159it [01:14,  2.16it/s]Processing test images: 160it [01:14,  2.16it/s]Processing test images: 161it [01:15,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.16it/s]Processing test images: 167it [01:17,  2.16it/s]Processing test images: 168it [01:18,  2.16it/s]Processing test images: 169it [01:18,  2.16it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.16it/s]Processing test images: 172it [01:20,  2.16it/s]Processing test images: 173it [01:20,  2.16it/s]Processing test images: 174it [01:21,  2.16it/s]Processing test images: 175it [01:21,  2.16it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.16it/s]Processing test images: 178it [01:22,  2.16it/s]Processing test images: 179it [01:23,  2.16it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:24,  2.16it/s]Processing test images: 182it [01:24,  2.16it/s]Processing test images: 183it [01:25,  2.16it/s]Processing test images: 184it [01:25,  2.16it/s]Processing test images: 185it [01:26,  2.16it/s]Processing test images: 186it [01:26,  2.16it/s]Processing test images: 187it [01:27,  2.16it/s]Processing test images: 188it [01:27,  2.16it/s]Processing test images: 189it [01:28,  2.16it/s]Processing test images: 190it [01:28,  2.16it/s]Processing test images: 191it [01:28,  2.16it/s]Processing test images: 192it [01:29,  2.16it/s]Processing test images: 193it [01:29,  2.16it/s]Processing test images: 194it [01:30,  2.16it/s]Processing test images: 195it [01:30,  2.16it/s]Processing test images: 196it [01:31,  2.16it/s]Processing test images: 197it [01:31,  2.16it/s]Processing test images: 198it [01:32,  2.16it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:33,  2.16it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:34,  2.16it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.16it/s]Processing test images: 208it [01:36,  2.16it/s]Processing test images: 209it [01:37,  2.16it/s]Processing test images: 210it [01:37,  2.16it/s]Processing test images: 211it [01:38,  2.16it/s]Processing test images: 212it [01:38,  2.16it/s]Processing test images: 213it [01:39,  2.16it/s]Processing test images: 214it [01:39,  2.16it/s]Processing test images: 215it [01:40,  2.17it/s]Processing test images: 216it [01:40,  2.17it/s]Processing test images: 217it [01:40,  2.17it/s]Processing test images: 218it [01:41,  2.17it/s]Processing test images: 219it [01:41,  2.17it/s]Processing test images: 220it [01:42,  2.17it/s]Processing test images: 221it [01:42,  2.17it/s]Processing test images: 222it [01:43,  2.16it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:44,  2.16it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:45,  2.16it/s]Processing test images: 227it [01:45,  2.16it/s]Processing test images: 228it [01:46,  2.16it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.16it/s]Processing test images: 233it [01:48,  2.16it/s]Processing test images: 234it [01:48,  2.16it/s]Processing test images: 235it [01:49,  2.16it/s]Processing test images: 236it [01:49,  2.16it/s]Processing test images: 237it [01:50,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:51,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:52,  2.16it/s]Processing test images: 242it [01:52,  2.17it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.16it/s]Processing test images: 247it [01:54,  2.16it/s]Processing test images: 248it [01:55,  2.16it/s]Processing test images: 249it [01:55,  2.16it/s]Processing test images: 250it [01:56,  2.16it/s]Processing test images: 251it [01:56,  2.16it/s]Processing test images: 252it [01:57,  2.16it/s]Processing test images: 253it [01:57,  2.16it/s]Processing test images: 254it [01:58,  2.16it/s]Processing test images: 255it [01:58,  2.16it/s]Processing test images: 256it [01:58,  2.16it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.16it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.16it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:03,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:04,  2.15it/s]Processing test images: 268it [02:04,  2.15it/s]Processing test images: 269it [02:04,  2.15it/s]Processing test images: 270it [02:05,  2.15it/s]Processing test images: 271it [02:05,  2.15it/s]Processing test images: 272it [02:06,  2.15it/s]Processing test images: 273it [02:06,  2.15it/s]Processing test images: 274it [02:07,  2.15it/s]Processing test images: 275it [02:07,  2.15it/s]Processing test images: 276it [02:08,  2.15it/s]Processing test images: 277it [02:08,  2.15it/s]Processing test images: 278it [02:09,  2.15it/s]Processing test images: 279it [02:09,  2.15it/s]Processing test images: 280it [02:10,  2.16it/s]Processing test images: 281it [02:10,  2.15it/s]Processing test images: 282it [02:11,  2.16it/s]Processing test images: 283it [02:11,  2.16it/s]Processing test images: 284it [02:11,  2.16it/s]Processing test images: 285it [02:12,  2.16it/s]Processing test images: 286it [02:12,  2.16it/s]Processing test images: 287it [02:13,  2.16it/s]Processing test images: 288it [02:13,  2.16it/s]Processing test images: 289it [02:14,  2.18it/s]Processing test images: 290it [02:14,  2.24it/s]Processing test images: 291it [02:15,  2.28it/s]Processing test images: 292it [02:15,  2.31it/s]Processing test images: 293it [02:15,  2.33it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:17,  2.37it/s]Processing test images: 297it [02:17,  2.38it/s]Processing test images: 298it [02:18,  2.38it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:02<00:29,  1.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:02<00:19,  2.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:02<00:13,  4.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:02<00:09,  5.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:03<00:07,  6.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:03<00:06,  7.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:03<00:05,  8.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:03<00:05,  8.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:03<00:04,  8.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:03<00:04,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:04<00:03, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:04<00:03, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:04<00:02, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:04<00:02, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:04<00:03,  9.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:05<00:02, 10.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:05<00:02, 10.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:05<00:02, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:05<00:01, 11.56it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:05<00:01, 11.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:05<00:01, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:06<00:01,  9.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:06<00:01, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:06<00:01, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:06<00:00, 11.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:06<00:00, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:06<00:00, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:07<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:07<00:00,  9.83it/s][A
Writing gif images: 100%|██████████| 64/64 [00:07<00:00, 10.48it/s][AWriting gif images: 100%|██████████| 64/64 [00:07<00:00,  8.44it/s]
Making gifs:  20%|██        | 1/5 [00:09<00:38,  9.63s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:00, 12.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:01,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.85it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.25it/s]
Making gifs:  40%|████      | 2/5 [00:22<00:35, 11.77s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:07,  8.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.58it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04,  9.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.96it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.99it/s]
Making gifs:  60%|██████    | 3/5 [00:30<00:20, 10.01s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05,  9.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.67it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 12.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 11.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.58it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.96it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.22it/s]
Making gifs:  80%|████████  | 4/5 [00:38<00:09,  9.16s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 12.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:02,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:04<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.34it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.23it/s]
Making gifs: 100%|██████████| 5/5 [00:46<00:00,  8.66s/it]Making gifs: 100%|██████████| 5/5 [00:46<00:00,  9.29s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.04it/s]Processing test images: 2it [00:01,  1.49it/s]                       Processing test images: 3it [00:01,  1.73it/s]Processing test images: 4it [00:02,  1.87it/s]Processing test images: 5it [00:02,  1.95it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.04it/s]Processing test images: 8it [00:04,  2.08it/s]Processing test images: 9it [00:04,  2.10it/s]Processing test images: 10it [00:05,  2.12it/s]Processing test images: 11it [00:05,  2.13it/s]Processing test images: 12it [00:06,  2.14it/s]Processing test images: 13it [00:06,  2.15it/s]Processing test images: 14it [00:07,  2.15it/s]Processing test images: 15it [00:07,  2.16it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.16it/s]Processing test images: 18it [00:08,  2.16it/s]Processing test images: 19it [00:09,  2.17it/s]Processing test images: 20it [00:09,  2.17it/s]Processing test images: 21it [00:10,  2.17it/s]Processing test images: 22it [00:10,  2.17it/s]Processing test images: 23it [00:11,  2.17it/s]Processing test images: 24it [00:11,  2.17it/s]Processing test images: 25it [00:12,  2.17it/s]Processing test images: 26it [00:12,  2.17it/s]Processing test images: 27it [00:13,  2.17it/s]Processing test images: 28it [00:13,  2.17it/s]Processing test images: 29it [00:13,  2.17it/s]Processing test images: 30it [00:14,  2.17it/s]Processing test images: 31it [00:14,  2.17it/s]Processing test images: 32it [00:15,  2.17it/s]Processing test images: 33it [00:15,  2.17it/s]Processing test images: 34it [00:16,  2.17it/s]Processing test images: 35it [00:16,  2.17it/s]Processing test images: 36it [00:17,  2.17it/s]Processing test images: 37it [00:17,  2.17it/s]Processing test images: 38it [00:18,  2.17it/s]Processing test images: 39it [00:18,  2.17it/s]Processing test images: 40it [00:19,  2.17it/s]Processing test images: 41it [00:19,  2.17it/s]Processing test images: 42it [00:19,  2.17it/s]Processing test images: 43it [00:20,  2.17it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:25,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:25,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.17it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:31,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:31,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:42,  2.17it/s]Processing test images: 93it [00:43,  2.16it/s]Processing test images: 94it [00:43,  2.16it/s]Processing test images: 95it [00:44,  2.16it/s]Processing test images: 96it [00:44,  2.16it/s]Processing test images: 97it [00:45,  2.16it/s]Processing test images: 98it [00:45,  2.16it/s]Processing test images: 99it [00:46,  2.16it/s]Processing test images: 100it [00:46,  2.16it/s]Processing test images: 101it [00:47,  2.16it/s]Processing test images: 102it [00:47,  2.16it/s]Processing test images: 103it [00:48,  2.16it/s]Processing test images: 104it [00:48,  2.16it/s]Processing test images: 105it [00:49,  2.16it/s]Processing test images: 106it [00:49,  2.16it/s]Processing test images: 107it [00:49,  2.16it/s]Processing test images: 108it [00:50,  2.16it/s]Processing test images: 109it [00:50,  2.16it/s]Processing test images: 110it [00:51,  2.16it/s]Processing test images: 111it [00:51,  2.16it/s]Processing test images: 112it [00:52,  2.16it/s]Processing test images: 113it [00:52,  2.16it/s]Processing test images: 114it [00:53,  2.16it/s]Processing test images: 115it [00:53,  2.16it/s]Processing test images: 116it [00:54,  2.12it/s]Processing test images: 117it [00:54,  2.13it/s]Processing test images: 118it [00:55,  2.14it/s]Processing test images: 119it [00:55,  2.15it/s]Processing test images: 120it [00:55,  2.15it/s]Processing test images: 121it [00:56,  2.16it/s]Processing test images: 122it [00:56,  2.16it/s]Processing test images: 123it [00:57,  2.16it/s]Processing test images: 124it [00:57,  2.16it/s]Processing test images: 125it [00:58,  2.16it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.16it/s]Processing test images: 129it [01:00,  2.16it/s]Processing test images: 130it [01:00,  2.16it/s]Processing test images: 131it [01:01,  2.16it/s]Processing test images: 132it [01:01,  2.16it/s]Processing test images: 133it [01:02,  2.16it/s]Processing test images: 134it [01:02,  2.16it/s]Processing test images: 135it [01:02,  2.16it/s]Processing test images: 136it [01:03,  2.16it/s]Processing test images: 137it [01:03,  2.16it/s]Processing test images: 138it [01:04,  2.16it/s]Processing test images: 139it [01:04,  2.16it/s]Processing test images: 140it [01:05,  2.16it/s]Processing test images: 141it [01:05,  2.16it/s]Processing test images: 142it [01:06,  2.16it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:07,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:08,  2.17it/s]Processing test images: 147it [01:08,  2.17it/s]Processing test images: 148it [01:08,  2.17it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:09,  2.17it/s]Processing test images: 151it [01:10,  2.17it/s]Processing test images: 152it [01:10,  2.17it/s]Processing test images: 153it [01:11,  2.17it/s]Processing test images: 154it [01:11,  2.17it/s]Processing test images: 155it [01:12,  2.17it/s]Processing test images: 156it [01:12,  2.17it/s]Processing test images: 157it [01:13,  2.17it/s]Processing test images: 158it [01:13,  2.17it/s]Processing test images: 159it [01:14,  2.17it/s]Processing test images: 160it [01:14,  2.17it/s]Processing test images: 161it [01:14,  2.17it/s]Processing test images: 162it [01:15,  2.17it/s]Processing test images: 163it [01:15,  2.17it/s]Processing test images: 164it [01:16,  2.17it/s]Processing test images: 165it [01:16,  2.17it/s]Processing test images: 166it [01:17,  2.17it/s]Processing test images: 167it [01:17,  2.17it/s]Processing test images: 168it [01:18,  2.17it/s]Processing test images: 169it [01:18,  2.17it/s]Processing test images: 170it [01:19,  2.17it/s]Processing test images: 171it [01:19,  2.17it/s]Processing test images: 172it [01:20,  2.17it/s]Processing test images: 173it [01:20,  2.17it/s]Processing test images: 174it [01:20,  2.17it/s]Processing test images: 175it [01:21,  2.17it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.17it/s]Processing test images: 178it [01:22,  2.17it/s]Processing test images: 179it [01:23,  2.17it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:24,  2.17it/s]Processing test images: 182it [01:24,  2.17it/s]Processing test images: 183it [01:25,  2.17it/s]Processing test images: 184it [01:25,  2.17it/s]Processing test images: 185it [01:26,  2.17it/s]Processing test images: 186it [01:26,  2.17it/s]Processing test images: 187it [01:26,  2.17it/s]Processing test images: 188it [01:27,  2.17it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.17it/s]Processing test images: 193it [01:29,  2.17it/s]Processing test images: 194it [01:30,  2.17it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:31,  2.17it/s]Processing test images: 197it [01:31,  2.17it/s]Processing test images: 198it [01:32,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:32,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.17it/s]Processing test images: 208it [01:36,  2.17it/s]Processing test images: 209it [01:37,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:38,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:38,  2.15it/s]Processing test images: 214it [01:39,  2.15it/s]Processing test images: 215it [01:39,  2.15it/s]Processing test images: 216it [01:40,  2.16it/s]Processing test images: 217it [01:40,  2.16it/s]Processing test images: 218it [01:41,  2.16it/s]Processing test images: 219it [01:41,  2.16it/s]Processing test images: 220it [01:42,  2.16it/s]Processing test images: 221it [01:42,  2.16it/s]Processing test images: 222it [01:43,  2.16it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:44,  2.16it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:44,  2.16it/s]Processing test images: 227it [01:45,  2.15it/s]Processing test images: 228it [01:45,  2.15it/s]Processing test images: 229it [01:46,  2.15it/s]Processing test images: 230it [01:46,  2.15it/s]Processing test images: 231it [01:47,  2.15it/s]Processing test images: 232it [01:47,  2.15it/s]Processing test images: 233it [01:48,  2.16it/s]Processing test images: 234it [01:48,  2.16it/s]Processing test images: 235it [01:49,  2.16it/s]Processing test images: 236it [01:49,  2.16it/s]Processing test images: 237it [01:50,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:50,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:51,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.16it/s]Processing test images: 247it [01:54,  2.16it/s]Processing test images: 248it [01:55,  2.16it/s]Processing test images: 249it [01:55,  2.16it/s]Processing test images: 250it [01:56,  2.16it/s]Processing test images: 251it [01:56,  2.16it/s]Processing test images: 252it [01:56,  2.16it/s]Processing test images: 253it [01:57,  2.16it/s]Processing test images: 254it [01:57,  2.16it/s]Processing test images: 255it [01:58,  2.17it/s]Processing test images: 256it [01:58,  2.17it/s]Processing test images: 257it [01:59,  2.17it/s]Processing test images: 258it [01:59,  2.17it/s]Processing test images: 259it [02:00,  2.17it/s]Processing test images: 260it [02:00,  2.17it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.16it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:02,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:03,  2.16it/s]Processing test images: 268it [02:04,  2.16it/s]Processing test images: 269it [02:04,  2.16it/s]Processing test images: 270it [02:05,  2.16it/s]Processing test images: 271it [02:05,  2.16it/s]Processing test images: 272it [02:06,  2.16it/s]Processing test images: 273it [02:06,  2.16it/s]Processing test images: 274it [02:07,  2.16it/s]Processing test images: 275it [02:07,  2.16it/s]Processing test images: 276it [02:08,  2.16it/s]Processing test images: 277it [02:08,  2.16it/s]Processing test images: 278it [02:09,  2.16it/s]Processing test images: 279it [02:09,  2.17it/s]Processing test images: 280it [02:09,  2.17it/s]Processing test images: 281it [02:10,  2.17it/s]Processing test images: 282it [02:10,  2.17it/s]Processing test images: 283it [02:11,  2.17it/s]Processing test images: 284it [02:11,  2.16it/s]Processing test images: 285it [02:12,  2.16it/s]Processing test images: 286it [02:12,  2.17it/s]Processing test images: 287it [02:13,  2.17it/s]Processing test images: 288it [02:13,  2.17it/s]Processing test images: 289it [02:14,  2.18it/s]Processing test images: 290it [02:14,  2.24it/s]Processing test images: 291it [02:14,  2.28it/s]Processing test images: 292it [02:15,  2.31it/s]Processing test images: 293it [02:15,  2.33it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:17,  2.37it/s]Processing test images: 297it [02:17,  2.37it/s]Processing test images: 298it [02:17,  2.38it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:05,  9.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.54it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.18it/s]
Making gifs:  20%|██        | 1/5 [00:07<00:31,  7.79s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:06,  9.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04,  9.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:03,  9.77it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.58it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.46it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.90it/s]
Making gifs:  40%|████      | 2/5 [00:15<00:23,  7.91s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.83it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.24it/s]
Making gifs:  60%|██████    | 3/5 [00:33<00:24, 12.32s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:07,  8.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05,  9.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.58it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04,  9.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.97it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.00it/s]
Making gifs:  80%|████████  | 4/5 [00:41<00:10, 10.58s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.19it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.16it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05,  9.55it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05, 10.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:12<00:55,  1.53s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:12<00:37,  1.09s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:12<00:25,  1.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:12<00:17,  1.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:12<00:11,  2.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:12<00:08,  2.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:13<00:06,  3.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:13<00:04,  4.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:13<00:03,  5.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:13<00:02,  6.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:13<00:01,  8.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:13<00:01,  8.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:14<00:01,  8.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:14<00:01,  9.14it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:14<00:00,  9.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:14<00:00, 10.53it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:18<00:02,  1.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:18<00:00,  2.17it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:18<00:00,  2.89it/s][AWriting gif images: 100%|██████████| 64/64 [00:18<00:00,  3.41it/s]
Making gifs: 100%|██████████| 5/5 [01:02<00:00, 14.33s/it]Making gifs: 100%|██████████| 5/5 [01:02<00:00, 12.45s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.01it/s]Processing test images: 2it [00:01,  1.46it/s]                       Processing test images: 3it [00:01,  1.71it/s]Processing test images: 4it [00:02,  1.85it/s]Processing test images: 5it [00:02,  1.94it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.04it/s]Processing test images: 8it [00:04,  2.03it/s]Processing test images: 9it [00:04,  2.07it/s]Processing test images: 10it [00:05,  2.10it/s]Processing test images: 11it [00:05,  2.12it/s]Processing test images: 12it [00:06,  2.13it/s]Processing test images: 13it [00:06,  2.14it/s]Processing test images: 14it [00:07,  2.15it/s]Processing test images: 15it [00:07,  2.15it/s]Processing test images: 16it [00:08,  2.16it/s]Processing test images: 17it [00:08,  2.16it/s]Processing test images: 18it [00:08,  2.16it/s]Processing test images: 19it [00:09,  2.16it/s]Processing test images: 20it [00:09,  2.16it/s]Processing test images: 21it [00:10,  2.16it/s]Processing test images: 22it [00:10,  2.16it/s]Processing test images: 23it [00:11,  2.16it/s]Processing test images: 24it [00:11,  2.16it/s]Processing test images: 25it [00:12,  2.16it/s]Processing test images: 26it [00:12,  2.16it/s]Processing test images: 27it [00:13,  2.16it/s]Processing test images: 28it [00:13,  2.16it/s]Processing test images: 29it [00:14,  2.16it/s]Processing test images: 30it [00:14,  2.16it/s]Processing test images: 31it [00:14,  2.16it/s]Processing test images: 32it [00:15,  2.16it/s]Processing test images: 33it [00:15,  2.16it/s]Processing test images: 34it [00:16,  2.16it/s]Processing test images: 35it [00:16,  2.16it/s]Processing test images: 36it [00:17,  2.16it/s]Processing test images: 37it [00:17,  2.16it/s]Processing test images: 38it [00:18,  2.16it/s]Processing test images: 39it [00:18,  2.16it/s]Processing test images: 40it [00:19,  2.16it/s]Processing test images: 41it [00:19,  2.16it/s]Processing test images: 42it [00:20,  2.16it/s]Processing test images: 43it [00:20,  2.16it/s]Processing test images: 44it [00:20,  2.16it/s]Processing test images: 45it [00:21,  2.16it/s]Processing test images: 46it [00:21,  2.16it/s]Processing test images: 47it [00:22,  2.16it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:25,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:26,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.17it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:31,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:32,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:38,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:44,  2.16it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.17it/s]Processing test images: 102it [00:47,  2.16it/s]Processing test images: 103it [00:48,  2.16it/s]Processing test images: 104it [00:48,  2.16it/s]Processing test images: 105it [00:49,  2.16it/s]Processing test images: 106it [00:49,  2.16it/s]Processing test images: 107it [00:50,  2.17it/s]Processing test images: 108it [00:50,  2.17it/s]Processing test images: 109it [00:50,  2.16it/s]Processing test images: 110it [00:51,  2.16it/s]Processing test images: 111it [00:51,  2.16it/s]Processing test images: 112it [00:52,  2.16it/s]Processing test images: 113it [00:52,  2.16it/s]Processing test images: 114it [00:53,  2.17it/s]Processing test images: 115it [00:53,  2.17it/s]Processing test images: 116it [00:54,  2.16it/s]Processing test images: 117it [00:54,  2.16it/s]Processing test images: 118it [00:55,  2.16it/s]Processing test images: 119it [00:55,  2.16it/s]Processing test images: 120it [00:56,  2.16it/s]Processing test images: 121it [00:56,  2.16it/s]Processing test images: 122it [00:56,  2.16it/s]Processing test images: 123it [00:57,  2.16it/s]Processing test images: 124it [00:57,  2.16it/s]Processing test images: 125it [00:58,  2.16it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.15it/s]Processing test images: 129it [01:00,  2.15it/s]Processing test images: 130it [01:00,  2.15it/s]Processing test images: 131it [01:01,  2.15it/s]Processing test images: 132it [01:01,  2.14it/s]Processing test images: 133it [01:02,  2.14it/s]Processing test images: 134it [01:02,  2.15it/s]Processing test images: 135it [01:03,  2.15it/s]Processing test images: 136it [01:03,  2.15it/s]Processing test images: 137it [01:03,  2.15it/s]Processing test images: 138it [01:04,  2.15it/s]Processing test images: 139it [01:04,  2.15it/s]Processing test images: 140it [01:05,  2.15it/s]Processing test images: 141it [01:05,  2.15it/s]Processing test images: 142it [01:06,  2.15it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:07,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:08,  2.16it/s]Processing test images: 147it [01:08,  2.16it/s]Processing test images: 148it [01:09,  2.16it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:09,  2.16it/s]Processing test images: 151it [01:10,  2.16it/s]Processing test images: 152it [01:10,  2.16it/s]Processing test images: 153it [01:11,  2.16it/s]Processing test images: 154it [01:11,  2.16it/s]Processing test images: 155it [01:12,  2.16it/s]Processing test images: 156it [01:12,  2.16it/s]Processing test images: 157it [01:13,  2.16it/s]Processing test images: 158it [01:13,  2.16it/s]Processing test images: 159it [01:14,  2.16it/s]Processing test images: 160it [01:14,  2.16it/s]Processing test images: 161it [01:15,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.17it/s]Processing test images: 167it [01:17,  2.16it/s]Processing test images: 168it [01:18,  2.17it/s]Processing test images: 169it [01:18,  2.16it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.16it/s]Processing test images: 172it [01:20,  2.17it/s]Processing test images: 173it [01:20,  2.16it/s]Processing test images: 174it [01:21,  2.16it/s]Processing test images: 175it [01:21,  2.16it/s]Processing test images: 176it [01:22,  2.16it/s]Processing test images: 177it [01:22,  2.16it/s]Processing test images: 178it [01:22,  2.16it/s]Processing test images: 179it [01:23,  2.16it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:24,  2.16it/s]Processing test images: 182it [01:24,  2.17it/s]Processing test images: 183it [01:25,  2.16it/s]Processing test images: 184it [01:25,  2.16it/s]Processing test images: 185it [01:26,  2.16it/s]Processing test images: 186it [01:26,  2.17it/s]Processing test images: 187it [01:27,  2.16it/s]Processing test images: 188it [01:27,  2.16it/s]Processing test images: 189it [01:28,  2.17it/s]Processing test images: 190it [01:28,  2.16it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.16it/s]Processing test images: 193it [01:29,  2.16it/s]Processing test images: 194it [01:30,  2.16it/s]Processing test images: 195it [01:30,  2.16it/s]Processing test images: 196it [01:31,  2.16it/s]Processing test images: 197it [01:31,  2.16it/s]Processing test images: 198it [01:32,  2.16it/s]Processing test images: 199it [01:32,  2.16it/s]Processing test images: 200it [01:33,  2.16it/s]Processing test images: 201it [01:33,  2.16it/s]Processing test images: 202it [01:34,  2.16it/s]Processing test images: 203it [01:34,  2.16it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.16it/s]Processing test images: 206it [01:35,  2.16it/s]Processing test images: 207it [01:36,  2.16it/s]Processing test images: 208it [01:36,  2.16it/s]Processing test images: 209it [01:37,  2.16it/s]Processing test images: 210it [01:37,  2.16it/s]Processing test images: 211it [01:38,  2.16it/s]Processing test images: 212it [01:38,  2.16it/s]Processing test images: 213it [01:39,  2.16it/s]Processing test images: 214it [01:39,  2.16it/s]Processing test images: 215it [01:40,  2.16it/s]Processing test images: 216it [01:40,  2.16it/s]Processing test images: 217it [01:40,  2.16it/s]Processing test images: 218it [01:41,  2.16it/s]Processing test images: 219it [01:41,  2.16it/s]Processing test images: 220it [01:42,  2.16it/s]Processing test images: 221it [01:42,  2.16it/s]Processing test images: 222it [01:43,  2.16it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:44,  2.16it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:45,  2.16it/s]Processing test images: 227it [01:45,  2.16it/s]Processing test images: 228it [01:46,  2.16it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.17it/s]Processing test images: 233it [01:48,  2.17it/s]Processing test images: 234it [01:48,  2.17it/s]Processing test images: 235it [01:49,  2.17it/s]Processing test images: 236it [01:49,  2.17it/s]Processing test images: 237it [01:50,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:51,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:52,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.17it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.17it/s]Processing test images: 247it [01:54,  2.17it/s]Processing test images: 248it [01:55,  2.16it/s]Processing test images: 249it [01:55,  2.15it/s]Processing test images: 250it [01:56,  2.16it/s]Processing test images: 251it [01:56,  2.16it/s]Processing test images: 252it [01:57,  2.16it/s]Processing test images: 253it [01:57,  2.16it/s]Processing test images: 254it [01:58,  2.16it/s]Processing test images: 255it [01:58,  2.16it/s]Processing test images: 256it [01:58,  2.16it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.16it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.16it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:03,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:04,  2.16it/s]Processing test images: 268it [02:04,  2.16it/s]Processing test images: 269it [02:04,  2.16it/s]Processing test images: 270it [02:05,  2.16it/s]Processing test images: 271it [02:05,  2.16it/s]Processing test images: 272it [02:06,  2.15it/s]Processing test images: 273it [02:06,  2.15it/s]Processing test images: 274it [02:07,  2.15it/s]Processing test images: 275it [02:07,  2.14it/s]Processing test images: 276it [02:08,  2.15it/s]Processing test images: 277it [02:08,  2.15it/s]Processing test images: 278it [02:09,  2.15it/s]Processing test images: 279it [02:09,  2.15it/s]Processing test images: 280it [02:10,  2.15it/s]Processing test images: 281it [02:10,  2.15it/s]Processing test images: 282it [02:11,  2.15it/s]Processing test images: 283it [02:11,  2.15it/s]Processing test images: 284it [02:11,  2.15it/s]Processing test images: 285it [02:12,  2.15it/s]Processing test images: 286it [02:12,  2.15it/s]Processing test images: 287it [02:13,  2.16it/s]Processing test images: 288it [02:13,  2.16it/s]Processing test images: 289it [02:14,  2.17it/s]Processing test images: 290it [02:14,  2.23it/s]Processing test images: 291it [02:15,  2.28it/s]Processing test images: 292it [02:15,  2.31it/s]Processing test images: 293it [02:15,  2.33it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:17,  2.37it/s]Processing test images: 297it [02:17,  2.37it/s]Processing test images: 298it [02:18,  2.38it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.36it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:03<01:07,  1.13s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [01:02<13:28, 13.95s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [01:02<07:54,  8.47s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [01:02<04:54,  5.45s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [01:02<03:08,  3.62s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [01:02<02:03,  2.46s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [01:03<01:21,  1.71s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [01:05<01:08,  1.49s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [01:05<00:47,  1.07s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [01:05<00:32,  1.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [01:05<00:22,  1.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [01:05<00:15,  2.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [01:06<00:11,  3.18it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [01:06<00:08,  4.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [01:06<00:06,  5.13it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [01:17<00:06,  5.13it/s][A
Writing gif images:  52%|█████▏    | 33/64 [01:19<01:14,  2.42s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [01:19<00:59,  1.97s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [01:19<00:35,  1.28s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [01:19<00:22,  1.15it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [01:19<00:14,  1.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [01:19<00:09,  2.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [01:20<00:06,  3.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [01:20<00:04,  3.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [01:20<00:03,  4.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [01:20<00:02,  5.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [01:20<00:01,  6.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [01:21<00:01,  7.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [01:21<00:00,  8.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [01:21<00:00,  9.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [01:21<00:00, 10.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [01:21<00:00,  9.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [01:22<00:00,  9.80it/s][AWriting gif images: 100%|██████████| 64/64 [01:22<00:00,  1.28s/it]
Making gifs:  20%|██        | 1/5 [01:24<05:36, 84.11s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.17it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.84it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.20it/s]
Making gifs:  40%|████      | 2/5 [01:33<01:59, 39.98s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:07,  8.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05,  9.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:02<00:08,  5.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:02<00:06,  6.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:05,  7.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  8.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:03<00:03, 10.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:03<00:03,  9.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:04<00:02, 11.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:04<00:01, 11.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:04<00:01, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:05<00:01, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:05<00:01, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:05<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:06<00:00, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:06<00:00, 10.96it/s][AWriting gif images: 100%|██████████| 64/64 [00:06<00:00, 10.16it/s]
Making gifs:  60%|██████    | 3/5 [01:44<00:53, 26.68s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.18it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05,  9.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05, 10.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 12.00it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.23it/s]
Making gifs:  80%|████████  | 4/5 [02:03<00:23, 23.94s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:08,  6.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:06,  9.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05, 10.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 11.17it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04,  9.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:04<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.36it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.01it/s]
Making gifs: 100%|██████████| 5/5 [02:11<00:00, 18.15s/it]Making gifs: 100%|██████████| 5/5 [02:11<00:00, 26.33s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.03it/s]Processing test images: 2it [00:01,  1.48it/s]                       Processing test images: 3it [00:01,  1.73it/s]Processing test images: 4it [00:02,  1.87it/s]Processing test images: 5it [00:02,  1.96it/s]Processing test images: 6it [00:03,  2.00it/s]Processing test images: 7it [00:03,  2.05it/s]Processing test images: 8it [00:04,  2.09it/s]Processing test images: 9it [00:04,  2.11it/s]Processing test images: 10it [00:05,  2.13it/s]Processing test images: 11it [00:05,  2.14it/s]Processing test images: 12it [00:06,  2.14it/s]Processing test images: 13it [00:06,  2.15it/s]Processing test images: 14it [00:07,  2.15it/s]Processing test images: 15it [00:07,  2.16it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.16it/s]Processing test images: 18it [00:08,  2.16it/s]Processing test images: 19it [00:09,  2.16it/s]Processing test images: 20it [00:09,  2.16it/s]Processing test images: 21it [00:10,  2.17it/s]Processing test images: 22it [00:10,  2.17it/s]Processing test images: 23it [00:11,  2.17it/s]Processing test images: 24it [00:11,  2.17it/s]Processing test images: 25it [00:12,  2.17it/s]Processing test images: 26it [00:12,  2.17it/s]Processing test images: 27it [00:13,  2.17it/s]Processing test images: 28it [00:13,  2.17it/s]Processing test images: 29it [00:13,  2.17it/s]Processing test images: 30it [00:14,  2.17it/s]Processing test images: 31it [00:14,  2.17it/s]Processing test images: 32it [00:15,  2.17it/s]Processing test images: 33it [00:15,  2.17it/s]Processing test images: 34it [00:16,  2.18it/s]Processing test images: 35it [00:16,  2.17it/s]Processing test images: 36it [00:17,  2.18it/s]Processing test images: 37it [00:17,  2.18it/s]Processing test images: 38it [00:18,  2.18it/s]Processing test images: 39it [00:18,  2.17it/s]Processing test images: 40it [00:18,  2.17it/s]Processing test images: 41it [00:19,  2.17it/s]Processing test images: 42it [00:19,  2.17it/s]Processing test images: 43it [00:20,  2.17it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:24,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:25,  2.17it/s]Processing test images: 56it [00:26,  2.18it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.18it/s]Processing test images: 62it [00:29,  2.18it/s]Processing test images: 63it [00:29,  2.18it/s]Processing test images: 64it [00:30,  2.18it/s]Processing test images: 65it [00:30,  2.18it/s]Processing test images: 66it [00:30,  2.18it/s]Processing test images: 67it [00:31,  2.18it/s]Processing test images: 68it [00:31,  2.18it/s]Processing test images: 69it [00:32,  2.18it/s]Processing test images: 70it [00:32,  2.18it/s]Processing test images: 71it [00:33,  2.18it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.18it/s]Processing test images: 75it [00:35,  2.18it/s]Processing test images: 76it [00:35,  2.18it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:36,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:41,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:42,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:43,  2.17it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.18it/s]Processing test images: 102it [00:47,  2.17it/s]Processing test images: 103it [00:47,  2.17it/s]Processing test images: 104it [00:48,  2.17it/s]Processing test images: 105it [00:48,  2.16it/s]Processing test images: 106it [00:49,  2.16it/s]Processing test images: 107it [00:49,  2.16it/s]Processing test images: 108it [00:50,  2.16it/s]Processing test images: 109it [00:50,  2.16it/s]Processing test images: 110it [00:51,  2.17it/s]Processing test images: 111it [00:51,  2.17it/s]Processing test images: 112it [00:52,  2.17it/s]Processing test images: 113it [00:52,  2.17it/s]Processing test images: 114it [00:53,  2.17it/s]Processing test images: 115it [00:53,  2.17it/s]Processing test images: 116it [00:53,  2.17it/s]Processing test images: 117it [00:54,  2.17it/s]Processing test images: 118it [00:54,  2.16it/s]Processing test images: 119it [00:55,  2.16it/s]Processing test images: 120it [00:55,  2.16it/s]Processing test images: 121it [00:56,  2.16it/s]Processing test images: 122it [00:56,  2.16it/s]Processing test images: 123it [00:57,  2.16it/s]Processing test images: 124it [00:57,  2.16it/s]Processing test images: 125it [00:58,  2.16it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.16it/s]Processing test images: 129it [00:59,  2.16it/s]Processing test images: 130it [01:00,  2.16it/s]Processing test images: 131it [01:00,  2.17it/s]Processing test images: 132it [01:01,  2.17it/s]Processing test images: 133it [01:01,  2.17it/s]Processing test images: 134it [01:02,  2.17it/s]Processing test images: 135it [01:02,  2.17it/s]Processing test images: 136it [01:03,  2.17it/s]Processing test images: 137it [01:03,  2.17it/s]Processing test images: 138it [01:04,  2.17it/s]Processing test images: 139it [01:04,  2.17it/s]Processing test images: 140it [01:05,  2.17it/s]Processing test images: 141it [01:05,  2.17it/s]Processing test images: 142it [01:05,  2.17it/s]Processing test images: 143it [01:06,  2.17it/s]Processing test images: 144it [01:06,  2.16it/s]Processing test images: 145it [01:07,  2.17it/s]Processing test images: 146it [01:07,  2.17it/s]Processing test images: 147it [01:08,  2.17it/s]Processing test images: 148it [01:08,  2.17it/s]Processing test images: 149it [01:09,  2.17it/s]Processing test images: 150it [01:09,  2.17it/s]Processing test images: 151it [01:10,  2.17it/s]Processing test images: 152it [01:10,  2.17it/s]Processing test images: 153it [01:11,  2.17it/s]Processing test images: 154it [01:11,  2.17it/s]Processing test images: 155it [01:11,  2.17it/s]Processing test images: 156it [01:12,  2.17it/s]Processing test images: 157it [01:12,  2.17it/s]Processing test images: 158it [01:13,  2.17it/s]Processing test images: 159it [01:13,  2.17it/s]Processing test images: 160it [01:14,  2.17it/s]Processing test images: 161it [01:14,  2.17it/s]Processing test images: 162it [01:15,  2.17it/s]Processing test images: 163it [01:15,  2.17it/s]Processing test images: 164it [01:16,  2.17it/s]Processing test images: 165it [01:16,  2.17it/s]Processing test images: 166it [01:17,  2.17it/s]Processing test images: 167it [01:17,  2.17it/s]Processing test images: 168it [01:17,  2.17it/s]Processing test images: 169it [01:18,  2.13it/s]Processing test images: 170it [01:18,  2.14it/s]Processing test images: 171it [01:19,  2.15it/s]Processing test images: 172it [01:19,  2.16it/s]Processing test images: 173it [01:20,  2.16it/s]Processing test images: 174it [01:20,  2.16it/s]Processing test images: 175it [01:21,  2.16it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.17it/s]Processing test images: 178it [01:22,  2.17it/s]Processing test images: 179it [01:23,  2.17it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:23,  2.17it/s]Processing test images: 182it [01:24,  2.17it/s]Processing test images: 183it [01:24,  2.17it/s]Processing test images: 184it [01:25,  2.17it/s]Processing test images: 185it [01:25,  2.17it/s]Processing test images: 186it [01:26,  2.17it/s]Processing test images: 187it [01:26,  2.17it/s]Processing test images: 188it [01:27,  2.17it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.17it/s]Processing test images: 193it [01:29,  2.17it/s]Processing test images: 194it [01:29,  2.17it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:30,  2.17it/s]Processing test images: 197it [01:31,  2.17it/s]Processing test images: 198it [01:31,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:32,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:35,  2.17it/s]Processing test images: 208it [01:36,  2.17it/s]Processing test images: 209it [01:36,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:37,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:38,  2.17it/s]Processing test images: 214it [01:39,  2.17it/s]Processing test images: 215it [01:39,  2.17it/s]Processing test images: 216it [01:40,  2.17it/s]Processing test images: 217it [01:40,  2.17it/s]Processing test images: 218it [01:41,  2.17it/s]Processing test images: 219it [01:41,  2.17it/s]Processing test images: 220it [01:41,  2.17it/s]Processing test images: 221it [01:42,  2.17it/s]Processing test images: 222it [01:42,  2.17it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:43,  2.15it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:44,  2.16it/s]Processing test images: 227it [01:45,  2.16it/s]Processing test images: 228it [01:45,  2.16it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.16it/s]Processing test images: 233it [01:47,  2.17it/s]Processing test images: 234it [01:48,  2.17it/s]Processing test images: 235it [01:48,  2.16it/s]Processing test images: 236it [01:49,  2.16it/s]Processing test images: 237it [01:49,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:50,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:51,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:53,  2.16it/s]Processing test images: 247it [01:54,  2.16it/s]Processing test images: 248it [01:54,  2.16it/s]Processing test images: 249it [01:55,  2.17it/s]Processing test images: 250it [01:55,  2.17it/s]Processing test images: 251it [01:56,  2.17it/s]Processing test images: 252it [01:56,  2.17it/s]Processing test images: 253it [01:57,  2.17it/s]Processing test images: 254it [01:57,  2.17it/s]Processing test images: 255it [01:58,  2.17it/s]Processing test images: 256it [01:58,  2.17it/s]Processing test images: 257it [01:59,  2.17it/s]Processing test images: 258it [01:59,  2.17it/s]Processing test images: 259it [01:59,  2.17it/s]Processing test images: 260it [02:00,  2.17it/s]Processing test images: 261it [02:00,  2.17it/s]Processing test images: 262it [02:01,  2.17it/s]Processing test images: 263it [02:01,  2.17it/s]Processing test images: 264it [02:02,  2.17it/s]Processing test images: 265it [02:02,  2.17it/s]Processing test images: 266it [02:03,  2.17it/s]Processing test images: 267it [02:03,  2.17it/s]Processing test images: 268it [02:04,  2.17it/s]Processing test images: 269it [02:04,  2.17it/s]Processing test images: 270it [02:05,  2.17it/s]Processing test images: 271it [02:05,  2.17it/s]Processing test images: 272it [02:05,  2.17it/s]Processing test images: 273it [02:06,  2.17it/s]Processing test images: 274it [02:06,  2.17it/s]Processing test images: 275it [02:07,  2.17it/s]Processing test images: 276it [02:07,  2.17it/s]Processing test images: 277it [02:08,  2.17it/s]Processing test images: 278it [02:08,  2.17it/s]Processing test images: 279it [02:09,  2.17it/s]Processing test images: 280it [02:09,  2.17it/s]Processing test images: 281it [02:10,  2.17it/s]Processing test images: 282it [02:10,  2.17it/s]Processing test images: 283it [02:11,  2.17it/s]Processing test images: 284it [02:11,  2.17it/s]Processing test images: 285it [02:11,  2.17it/s]Processing test images: 286it [02:12,  2.17it/s]Processing test images: 287it [02:12,  2.17it/s]Processing test images: 288it [02:13,  2.17it/s]Processing test images: 289it [02:13,  2.19it/s]Processing test images: 290it [02:14,  2.25it/s]Processing test images: 291it [02:14,  2.29it/s]Processing test images: 292it [02:15,  2.32it/s]Processing test images: 293it [02:15,  2.34it/s]Processing test images: 294it [02:15,  2.35it/s]Processing test images: 295it [02:16,  2.37it/s]Processing test images: 296it [02:16,  2.37it/s]Processing test images: 297it [02:17,  2.38it/s]Processing test images: 298it [02:17,  2.38it/s]Processing test images: 299it [02:17,  2.38it/s]Processing test images: 300it [02:18,  2.39it/s]Processing test images: 300it [02:18,  2.17it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:05,  9.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.15it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.92it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:02,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:04<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.32it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.16it/s]
Making gifs:  20%|██        | 1/5 [00:07<00:31,  7.79s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05,  9.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.82it/s][A
Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.98it/s][A
Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.82it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.99it/s]
Making gifs:  40%|████      | 2/5 [00:19<00:30, 10.12s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:05,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00,  9.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.60it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.22it/s]
Making gifs:  60%|██████    | 3/5 [00:27<00:18,  9.07s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:06,  9.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.12it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 10.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04,  9.77it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:03,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.26it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.55it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.95it/s][A
Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00,  9.81it/s][A
Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.45it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.98it/s]
Making gifs:  80%|████████  | 4/5 [00:35<00:08,  8.62s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05,  9.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:01,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.26it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.79it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.21it/s]
Making gifs: 100%|██████████| 5/5 [00:49<00:00, 10.51s/it]Making gifs: 100%|██████████| 5/5 [00:49<00:00,  9.83s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.02it/s]Processing test images: 2it [00:01,  1.47it/s]                       Processing test images: 3it [00:01,  1.72it/s]Processing test images: 4it [00:02,  1.86it/s]Processing test images: 5it [00:02,  1.95it/s]Processing test images: 6it [00:03,  2.00it/s]Processing test images: 7it [00:03,  2.05it/s]Processing test images: 8it [00:04,  2.08it/s]Processing test images: 9it [00:04,  2.11it/s]Processing test images: 10it [00:05,  2.13it/s]Processing test images: 11it [00:05,  2.10it/s]Processing test images: 12it [00:06,  2.11it/s]Processing test images: 13it [00:06,  2.13it/s]Processing test images: 14it [00:07,  2.14it/s]Processing test images: 15it [00:07,  2.15it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.16it/s]Processing test images: 18it [00:08,  2.16it/s]Processing test images: 19it [00:09,  2.16it/s]Processing test images: 20it [00:09,  2.16it/s]Processing test images: 21it [00:10,  2.16it/s]Processing test images: 22it [00:10,  2.15it/s]Processing test images: 23it [00:11,  2.15it/s]Processing test images: 24it [00:11,  2.15it/s]Processing test images: 25it [00:12,  2.15it/s]Processing test images: 26it [00:12,  2.15it/s]Processing test images: 27it [00:13,  2.15it/s]Processing test images: 28it [00:13,  2.15it/s]Processing test images: 29it [00:14,  2.15it/s]Processing test images: 30it [00:14,  2.16it/s]Processing test images: 31it [00:14,  2.16it/s]Processing test images: 32it [00:15,  2.16it/s]Processing test images: 33it [00:15,  2.16it/s]Processing test images: 34it [00:16,  2.16it/s]Processing test images: 35it [00:16,  2.16it/s]Processing test images: 36it [00:17,  2.16it/s]Processing test images: 37it [00:17,  2.16it/s]Processing test images: 38it [00:18,  2.16it/s]Processing test images: 39it [00:18,  2.16it/s]Processing test images: 40it [00:19,  2.16it/s]Processing test images: 41it [00:19,  2.16it/s]Processing test images: 42it [00:20,  2.16it/s]Processing test images: 43it [00:20,  2.16it/s]Processing test images: 44it [00:20,  2.16it/s]Processing test images: 45it [00:21,  2.16it/s]Processing test images: 46it [00:21,  2.16it/s]Processing test images: 47it [00:22,  2.16it/s]Processing test images: 48it [00:22,  2.16it/s]Processing test images: 49it [00:23,  2.16it/s]Processing test images: 50it [00:23,  2.16it/s]Processing test images: 51it [00:24,  2.16it/s]Processing test images: 52it [00:24,  2.16it/s]Processing test images: 53it [00:25,  2.16it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:26,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.16it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.16it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.16it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:31,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:32,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:38,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.16it/s]Processing test images: 89it [00:41,  2.16it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:44,  2.17it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.17it/s]Processing test images: 102it [00:47,  2.17it/s]Processing test images: 103it [00:48,  2.17it/s]Processing test images: 104it [00:48,  2.16it/s]Processing test images: 105it [00:49,  2.16it/s]Processing test images: 106it [00:49,  2.16it/s]Processing test images: 107it [00:50,  2.16it/s]Processing test images: 108it [00:50,  2.16it/s]Processing test images: 109it [00:50,  2.16it/s]Processing test images: 110it [00:51,  2.16it/s]Processing test images: 111it [00:51,  2.17it/s]Processing test images: 112it [00:52,  2.17it/s]Processing test images: 113it [00:52,  2.17it/s]Processing test images: 114it [00:53,  2.17it/s]Processing test images: 115it [00:53,  2.17it/s]Processing test images: 116it [00:54,  2.16it/s]Processing test images: 117it [00:54,  2.16it/s]Processing test images: 118it [00:55,  2.16it/s]Processing test images: 119it [00:55,  2.16it/s]Processing test images: 120it [00:56,  2.16it/s]Processing test images: 121it [00:56,  2.16it/s]Processing test images: 122it [00:56,  2.16it/s]Processing test images: 123it [00:57,  2.16it/s]Processing test images: 124it [00:57,  2.16it/s]Processing test images: 125it [00:58,  2.15it/s]Processing test images: 126it [00:58,  2.15it/s]Processing test images: 127it [00:59,  2.15it/s]Processing test images: 128it [00:59,  2.15it/s]Processing test images: 129it [01:00,  2.15it/s]Processing test images: 130it [01:00,  2.15it/s]Processing test images: 131it [01:01,  2.15it/s]Processing test images: 132it [01:01,  2.15it/s]Processing test images: 133it [01:02,  2.15it/s]Processing test images: 134it [01:02,  2.15it/s]Processing test images: 135it [01:03,  2.15it/s]Processing test images: 136it [01:03,  2.15it/s]Processing test images: 137it [01:03,  2.16it/s]Processing test images: 138it [01:04,  2.16it/s]Processing test images: 139it [01:04,  2.16it/s]Processing test images: 140it [01:05,  2.16it/s]Processing test images: 141it [01:05,  2.16it/s]Processing test images: 142it [01:06,  2.16it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:07,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:08,  2.16it/s]Processing test images: 147it [01:08,  2.16it/s]Processing test images: 148it [01:09,  2.16it/s]Processing test images: 149it [01:09,  2.16it/s]Processing test images: 150it [01:09,  2.16it/s]Processing test images: 151it [01:10,  2.16it/s]Processing test images: 152it [01:10,  2.16it/s]Processing test images: 153it [01:11,  2.16it/s]Processing test images: 154it [01:11,  2.16it/s]Processing test images: 155it [01:12,  2.16it/s]Processing test images: 156it [01:12,  2.16it/s]Processing test images: 157it [01:13,  2.16it/s]Processing test images: 158it [01:13,  2.16it/s]Processing test images: 159it [01:14,  2.17it/s]Processing test images: 160it [01:14,  2.16it/s]Processing test images: 161it [01:15,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.16it/s]Processing test images: 167it [01:17,  2.17it/s]Processing test images: 168it [01:18,  2.17it/s]Processing test images: 169it [01:18,  2.17it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.16it/s]Processing test images: 172it [01:20,  2.16it/s]Processing test images: 173it [01:20,  2.16it/s]Processing test images: 174it [01:21,  2.16it/s]Processing test images: 175it [01:21,  2.17it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.17it/s]Processing test images: 178it [01:22,  2.17it/s]Processing test images: 179it [01:23,  2.16it/s]Processing test images: 180it [01:23,  2.16it/s]Processing test images: 181it [01:24,  2.16it/s]Processing test images: 182it [01:24,  2.16it/s]Processing test images: 183it [01:25,  2.16it/s]Processing test images: 184it [01:25,  2.16it/s]Processing test images: 185it [01:26,  2.16it/s]Processing test images: 186it [01:26,  2.16it/s]Processing test images: 187it [01:27,  2.16it/s]Processing test images: 188it [01:27,  2.16it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.16it/s]Processing test images: 193it [01:29,  2.16it/s]Processing test images: 194it [01:30,  2.16it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:31,  2.16it/s]Processing test images: 197it [01:31,  2.16it/s]Processing test images: 198it [01:32,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:33,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.17it/s]Processing test images: 208it [01:36,  2.16it/s]Processing test images: 209it [01:37,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:38,  2.17it/s]Processing test images: 212it [01:38,  2.16it/s]Processing test images: 213it [01:39,  2.16it/s]Processing test images: 214it [01:39,  2.16it/s]Processing test images: 215it [01:39,  2.17it/s]Processing test images: 216it [01:40,  2.17it/s]Processing test images: 217it [01:40,  2.16it/s]Processing test images: 218it [01:41,  2.17it/s]Processing test images: 219it [01:41,  2.16it/s]Processing test images: 220it [01:42,  2.16it/s]Processing test images: 221it [01:42,  2.16it/s]Processing test images: 222it [01:43,  2.16it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:44,  2.16it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:45,  2.16it/s]Processing test images: 227it [01:45,  2.16it/s]Processing test images: 228it [01:45,  2.16it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.16it/s]Processing test images: 233it [01:48,  2.16it/s]Processing test images: 234it [01:48,  2.16it/s]Processing test images: 235it [01:49,  2.16it/s]Processing test images: 236it [01:49,  2.16it/s]Processing test images: 237it [01:50,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:51,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:52,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.15it/s]Processing test images: 245it [01:53,  2.15it/s]Processing test images: 246it [01:54,  2.15it/s]Processing test images: 247it [01:54,  2.15it/s]Processing test images: 248it [01:55,  2.15it/s]Processing test images: 249it [01:55,  2.15it/s]Processing test images: 250it [01:56,  2.15it/s]Processing test images: 251it [01:56,  2.15it/s]Processing test images: 252it [01:57,  2.15it/s]Processing test images: 253it [01:57,  2.15it/s]Processing test images: 254it [01:58,  2.15it/s]Processing test images: 255it [01:58,  2.15it/s]Processing test images: 256it [01:58,  2.16it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.16it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.16it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:03,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:04,  2.16it/s]Processing test images: 268it [02:04,  2.16it/s]Processing test images: 269it [02:05,  2.16it/s]Processing test images: 270it [02:05,  2.16it/s]Processing test images: 271it [02:05,  2.16it/s]Processing test images: 272it [02:06,  2.16it/s]Processing test images: 273it [02:06,  2.16it/s]Processing test images: 274it [02:07,  2.16it/s]Processing test images: 275it [02:07,  2.16it/s]Processing test images: 276it [02:08,  2.16it/s]Processing test images: 277it [02:08,  2.16it/s]Processing test images: 278it [02:09,  2.16it/s]Processing test images: 279it [02:09,  2.16it/s]Processing test images: 280it [02:10,  2.16it/s]Processing test images: 281it [02:10,  2.16it/s]Processing test images: 282it [02:11,  2.16it/s]Processing test images: 283it [02:11,  2.16it/s]Processing test images: 284it [02:11,  2.16it/s]Processing test images: 285it [02:12,  2.16it/s]Processing test images: 286it [02:12,  2.16it/s]Processing test images: 287it [02:13,  2.16it/s]Processing test images: 288it [02:13,  2.16it/s]Processing test images: 289it [02:14,  2.18it/s]Processing test images: 290it [02:14,  2.24it/s]Processing test images: 291it [02:15,  2.28it/s]Processing test images: 292it [02:15,  2.31it/s]Processing test images: 293it [02:15,  2.34it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:17,  2.37it/s]Processing test images: 297it [02:17,  2.38it/s]Processing test images: 298it [02:18,  2.38it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.39it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   2%|▏         | 1/64 [00:03<04:00,  3.82s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   5%|▍         | 3/64 [00:03<01:04,  1.05s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   8%|▊         | 5/64 [00:04<00:32,  1.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  11%|█         | 7/64 [00:04<00:20,  2.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  14%|█▍        | 9/64 [00:04<00:13,  3.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  17%|█▋        | 11/64 [00:04<00:11,  4.66it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  20%|██        | 13/64 [00:04<00:08,  5.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  23%|██▎       | 15/64 [00:05<00:06,  7.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  27%|██▋       | 17/64 [00:05<00:05,  8.17it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  30%|██▉       | 19/64 [00:05<00:04,  9.13it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  33%|███▎      | 21/64 [00:05<00:04,  9.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  36%|███▌      | 23/64 [00:05<00:03, 10.56it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  39%|███▉      | 25/64 [00:06<00:04,  9.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  42%|████▏     | 27/64 [00:06<00:03,  9.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  45%|████▌     | 29/64 [00:06<00:03, 10.52it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  48%|████▊     | 31/64 [00:06<00:02, 11.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  52%|█████▏    | 33/64 [00:06<00:02, 11.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  55%|█████▍    | 35/64 [00:06<00:02, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  58%|█████▊    | 37/64 [00:07<00:02, 11.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  61%|██████    | 39/64 [00:07<00:02,  9.72it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  64%|██████▍   | 41/64 [00:07<00:02, 10.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  67%|██████▋   | 43/64 [00:07<00:01, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  70%|███████   | 45/64 [00:07<00:01, 11.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  73%|███████▎  | 47/64 [00:07<00:01, 11.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  77%|███████▋  | 49/64 [00:08<00:01, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  80%|███████▉  | 51/64 [00:08<00:01, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  83%|████████▎ | 53/64 [00:08<00:01,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  86%|████████▌ | 55/64 [00:08<00:00, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  89%|████████▉ | 57/64 [00:08<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  92%|█████████▏| 59/64 [00:09<00:00, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  95%|█████████▌| 61/64 [00:09<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  98%|█████████▊| 63/64 [00:09<00:00, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Writing gif images: 100%|██████████| 64/64 [00:09<00:00,  6.78it/s]
Making gifs:  20%|██        | 1/5 [00:13<00:54, 13.72s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   2%|▏         | 1/64 [00:01<02:04,  1.98s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:02<00:58,  1.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:02<00:24,  2.50it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:02<00:14,  4.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:02<00:10,  5.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:02<00:07,  6.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:02<00:06,  8.13it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:03<00:05,  9.15it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:03<00:05,  8.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:03<00:04,  9.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:03<00:04, 10.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:03<00:03, 10.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:04<00:03, 11.10it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:04<00:03, 11.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:04<00:03, 11.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:04<00:03,  9.67it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:04<00:03, 10.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:05<00:02, 10.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:05<00:02, 11.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:05<00:02, 11.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:05<00:02, 11.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:05<00:01, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:05<00:02,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:06<00:01, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:06<00:01, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:06<00:01, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:06<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:06<00:00, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:06<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:07<00:00,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:07<00:00, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:07<00:00, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:07<00:00, 11.32it/s][AWriting gif images: 100%|██████████| 64/64 [00:07<00:00,  8.28it/s]
Making gifs:  40%|████      | 2/5 [00:27<00:41, 13.80s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.26it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05,  9.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.58it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.80it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.97it/s]
Making gifs:  60%|██████    | 3/5 [00:39<00:25, 12.87s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:05,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.49it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.67it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.77it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03,  9.77it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.63it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.22it/s]
Making gifs:  80%|████████  | 4/5 [00:47<00:10, 10.86s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:06,  9.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.14it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 10.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04,  9.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:03,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 10.47it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.99it/s]
Making gifs: 100%|██████████| 5/5 [00:55<00:00,  9.79s/it]Making gifs: 100%|██████████| 5/5 [00:55<00:00, 11.00s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.02it/s]Processing test images: 2it [00:01,  1.48it/s]                       Processing test images: 3it [00:01,  1.72it/s]Processing test images: 4it [00:02,  1.86it/s]Processing test images: 5it [00:02,  1.95it/s]Processing test images: 6it [00:03,  1.99it/s]Processing test images: 7it [00:03,  2.04it/s]Processing test images: 8it [00:04,  2.08it/s]Processing test images: 9it [00:04,  2.10it/s]Processing test images: 10it [00:05,  2.12it/s]Processing test images: 11it [00:05,  2.13it/s]Processing test images: 12it [00:06,  2.14it/s]Processing test images: 13it [00:06,  2.15it/s]Processing test images: 14it [00:07,  2.15it/s]Processing test images: 15it [00:07,  2.16it/s]Processing test images: 16it [00:07,  2.16it/s]Processing test images: 17it [00:08,  2.17it/s]Processing test images: 18it [00:08,  2.17it/s]Processing test images: 19it [00:09,  2.17it/s]Processing test images: 20it [00:09,  2.17it/s]Processing test images: 21it [00:10,  2.17it/s]Processing test images: 22it [00:10,  2.17it/s]Processing test images: 23it [00:11,  2.17it/s]Processing test images: 24it [00:11,  2.17it/s]Processing test images: 25it [00:12,  2.17it/s]Processing test images: 26it [00:12,  2.17it/s]Processing test images: 27it [00:13,  2.17it/s]Processing test images: 28it [00:13,  2.17it/s]Processing test images: 29it [00:13,  2.17it/s]Processing test images: 30it [00:14,  2.17it/s]Processing test images: 31it [00:14,  2.17it/s]Processing test images: 32it [00:15,  2.17it/s]Processing test images: 33it [00:15,  2.17it/s]Processing test images: 34it [00:16,  2.17it/s]Processing test images: 35it [00:16,  2.17it/s]Processing test images: 36it [00:17,  2.17it/s]Processing test images: 37it [00:17,  2.18it/s]Processing test images: 38it [00:18,  2.17it/s]Processing test images: 39it [00:18,  2.17it/s]Processing test images: 40it [00:19,  2.17it/s]Processing test images: 41it [00:19,  2.17it/s]Processing test images: 42it [00:19,  2.17it/s]Processing test images: 43it [00:20,  2.17it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:24,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:25,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.17it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:30,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:31,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.17it/s]Processing test images: 73it [00:34,  2.17it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:36,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:42,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:43,  2.17it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.17it/s]Processing test images: 102it [00:47,  2.17it/s]Processing test images: 103it [00:48,  2.17it/s]Processing test images: 104it [00:48,  2.17it/s]Processing test images: 105it [00:48,  2.17it/s]Processing test images: 106it [00:49,  2.17it/s]Processing test images: 107it [00:49,  2.17it/s]Processing test images: 108it [00:50,  2.17it/s]Processing test images: 109it [00:50,  2.16it/s]Processing test images: 110it [00:51,  2.16it/s]Processing test images: 111it [00:51,  2.16it/s]Processing test images: 112it [00:52,  2.15it/s]Processing test images: 113it [00:52,  2.15it/s]Processing test images: 114it [00:53,  2.15it/s]Processing test images: 115it [00:53,  2.15it/s]Processing test images: 116it [00:54,  2.15it/s]Processing test images: 117it [00:54,  2.15it/s]Processing test images: 118it [00:54,  2.15it/s]Processing test images: 119it [00:55,  2.16it/s]Processing test images: 120it [00:55,  2.16it/s]Processing test images: 121it [00:56,  2.16it/s]Processing test images: 122it [00:56,  2.16it/s]Processing test images: 123it [00:57,  2.16it/s]Processing test images: 124it [00:57,  2.16it/s]Processing test images: 125it [00:58,  2.16it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.16it/s]Processing test images: 129it [01:00,  2.16it/s]Processing test images: 130it [01:00,  2.16it/s]Processing test images: 131it [01:00,  2.16it/s]Processing test images: 132it [01:01,  2.16it/s]Processing test images: 133it [01:01,  2.17it/s]Processing test images: 134it [01:02,  2.17it/s]Processing test images: 135it [01:02,  2.17it/s]Processing test images: 136it [01:03,  2.17it/s]Processing test images: 137it [01:03,  2.17it/s]Processing test images: 138it [01:04,  2.17it/s]Processing test images: 139it [01:04,  2.17it/s]Processing test images: 140it [01:05,  2.17it/s]Processing test images: 141it [01:05,  2.17it/s]Processing test images: 142it [01:06,  2.17it/s]Processing test images: 143it [01:06,  2.17it/s]Processing test images: 144it [01:06,  2.17it/s]Processing test images: 145it [01:07,  2.17it/s]Processing test images: 146it [01:07,  2.17it/s]Processing test images: 147it [01:08,  2.17it/s]Processing test images: 148it [01:08,  2.16it/s]Processing test images: 149it [01:09,  2.17it/s]Processing test images: 150it [01:09,  2.17it/s]Processing test images: 151it [01:10,  2.17it/s]Processing test images: 152it [01:10,  2.17it/s]Processing test images: 153it [01:11,  2.17it/s]Processing test images: 154it [01:11,  2.17it/s]Processing test images: 155it [01:12,  2.17it/s]Processing test images: 156it [01:12,  2.17it/s]Processing test images: 157it [01:12,  2.17it/s]Processing test images: 158it [01:13,  2.17it/s]Processing test images: 159it [01:13,  2.17it/s]Processing test images: 160it [01:14,  2.17it/s]Processing test images: 161it [01:14,  2.17it/s]Processing test images: 162it [01:15,  2.17it/s]Processing test images: 163it [01:15,  2.17it/s]Processing test images: 164it [01:16,  2.17it/s]Processing test images: 165it [01:16,  2.17it/s]Processing test images: 166it [01:17,  2.17it/s]Processing test images: 167it [01:17,  2.17it/s]Processing test images: 168it [01:18,  2.17it/s]Processing test images: 169it [01:18,  2.17it/s]Processing test images: 170it [01:18,  2.17it/s]Processing test images: 171it [01:19,  2.17it/s]Processing test images: 172it [01:19,  2.17it/s]Processing test images: 173it [01:20,  2.17it/s]Processing test images: 174it [01:20,  2.17it/s]Processing test images: 175it [01:21,  2.17it/s]Processing test images: 176it [01:21,  2.17it/s]Processing test images: 177it [01:22,  2.17it/s]Processing test images: 178it [01:22,  2.17it/s]Processing test images: 179it [01:23,  2.17it/s]Processing test images: 180it [01:23,  2.17it/s]Processing test images: 181it [01:24,  2.17it/s]Processing test images: 182it [01:24,  2.17it/s]Processing test images: 183it [01:24,  2.17it/s]Processing test images: 184it [01:25,  2.17it/s]Processing test images: 185it [01:25,  2.17it/s]Processing test images: 186it [01:26,  2.17it/s]Processing test images: 187it [01:26,  2.17it/s]Processing test images: 188it [01:27,  2.17it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.17it/s]Processing test images: 192it [01:29,  2.17it/s]Processing test images: 193it [01:29,  2.17it/s]Processing test images: 194it [01:30,  2.17it/s]Processing test images: 195it [01:30,  2.17it/s]Processing test images: 196it [01:30,  2.17it/s]Processing test images: 197it [01:31,  2.17it/s]Processing test images: 198it [01:31,  2.17it/s]Processing test images: 199it [01:32,  2.17it/s]Processing test images: 200it [01:32,  2.17it/s]Processing test images: 201it [01:33,  2.17it/s]Processing test images: 202it [01:33,  2.17it/s]Processing test images: 203it [01:34,  2.17it/s]Processing test images: 204it [01:34,  2.17it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.17it/s]Processing test images: 208it [01:36,  2.17it/s]Processing test images: 209it [01:36,  2.17it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:37,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:38,  2.16it/s]Processing test images: 214it [01:39,  2.16it/s]Processing test images: 215it [01:39,  2.16it/s]Processing test images: 216it [01:40,  2.16it/s]Processing test images: 217it [01:40,  2.16it/s]Processing test images: 218it [01:41,  2.16it/s]Processing test images: 219it [01:41,  2.16it/s]Processing test images: 220it [01:42,  2.16it/s]Processing test images: 221it [01:42,  2.17it/s]Processing test images: 222it [01:42,  2.16it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:43,  2.16it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:44,  2.16it/s]Processing test images: 227it [01:45,  2.16it/s]Processing test images: 228it [01:45,  2.16it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.16it/s]Processing test images: 233it [01:48,  2.16it/s]Processing test images: 234it [01:48,  2.16it/s]Processing test images: 235it [01:48,  2.16it/s]Processing test images: 236it [01:49,  2.16it/s]Processing test images: 237it [01:49,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:50,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:51,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.16it/s]Processing test images: 247it [01:54,  2.16it/s]Processing test images: 248it [01:55,  2.12it/s]Processing test images: 249it [01:55,  2.14it/s]Processing test images: 250it [01:55,  2.15it/s]Processing test images: 251it [01:56,  2.15it/s]Processing test images: 252it [01:56,  2.15it/s]Processing test images: 253it [01:57,  2.16it/s]Processing test images: 254it [01:57,  2.16it/s]Processing test images: 255it [01:58,  2.16it/s]Processing test images: 256it [01:58,  2.16it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.17it/s]Processing test images: 261it [02:01,  2.17it/s]Processing test images: 262it [02:01,  2.17it/s]Processing test images: 263it [02:01,  2.17it/s]Processing test images: 264it [02:02,  2.17it/s]Processing test images: 265it [02:02,  2.17it/s]Processing test images: 266it [02:03,  2.17it/s]Processing test images: 267it [02:03,  2.17it/s]Processing test images: 268it [02:04,  2.17it/s]Processing test images: 269it [02:04,  2.17it/s]Processing test images: 270it [02:05,  2.17it/s]Processing test images: 271it [02:05,  2.17it/s]Processing test images: 272it [02:06,  2.17it/s]Processing test images: 273it [02:06,  2.17it/s]Processing test images: 274it [02:07,  2.17it/s]Processing test images: 275it [02:07,  2.17it/s]Processing test images: 276it [02:07,  2.17it/s]Processing test images: 277it [02:08,  2.17it/s]Processing test images: 278it [02:08,  2.17it/s]Processing test images: 279it [02:09,  2.17it/s]Processing test images: 280it [02:09,  2.17it/s]Processing test images: 281it [02:10,  2.17it/s]Processing test images: 282it [02:10,  2.17it/s]Processing test images: 283it [02:11,  2.17it/s]Processing test images: 284it [02:11,  2.17it/s]Processing test images: 285it [02:12,  2.17it/s]Processing test images: 286it [02:12,  2.17it/s]Processing test images: 287it [02:13,  2.17it/s]Processing test images: 288it [02:13,  2.17it/s]Processing test images: 289it [02:13,  2.19it/s]Processing test images: 290it [02:14,  2.24it/s]Processing test images: 291it [02:14,  2.29it/s]Processing test images: 292it [02:15,  2.32it/s]Processing test images: 293it [02:15,  2.34it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:16,  2.37it/s]Processing test images: 297it [02:17,  2.38it/s]Processing test images: 298it [02:17,  2.38it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.39it/s]Processing test images: 300it [02:18,  2.17it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:16<04:56,  4.94s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:17<02:37,  2.72s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:17<01:33,  1.68s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:17<00:59,  1.10s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:17<00:39,  1.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:17<00:26,  1.87it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:28<00:26,  1.87it/s][A
Writing gif images:  23%|██▎       | 15/64 [00:33<02:47,  3.41s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  27%|██▋       | 17/64 [00:33<01:46,  2.27s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  30%|██▉       | 19/64 [00:33<01:09,  1.54s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  33%|███▎      | 21/64 [00:34<00:45,  1.07s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  36%|███▌      | 23/64 [00:34<00:30,  1.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  39%|███▉      | 25/64 [00:34<00:21,  1.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  42%|████▏     | 27/64 [00:34<00:14,  2.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  45%|████▌     | 29/64 [00:34<00:10,  3.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  48%|████▊     | 31/64 [00:34<00:08,  3.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  52%|█████▏    | 33/64 [00:37<00:18,  1.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  55%|█████▍    | 35/64 [00:37<00:12,  2.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  58%|█████▊    | 37/64 [00:37<00:08,  3.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  61%|██████    | 39/64 [00:38<00:06,  3.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  64%|██████▍   | 41/64 [00:38<00:04,  4.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  67%|██████▋   | 43/64 [00:38<00:03,  6.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  70%|███████   | 45/64 [00:38<00:03,  6.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  73%|███████▎  | 47/64 [00:38<00:02,  7.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  77%|███████▋  | 49/64 [00:39<00:01,  8.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  80%|███████▉  | 51/64 [00:39<00:01,  9.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  83%|████████▎ | 53/64 [00:39<00:01, 10.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  86%|████████▌ | 55/64 [00:39<00:00, 10.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  89%|████████▉ | 57/64 [00:39<00:00, 11.08it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  92%|█████████▏| 59/64 [00:40<00:00,  9.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  95%|█████████▌| 61/64 [00:40<00:00, 10.11it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  98%|█████████▊| 63/64 [00:40<00:00, 10.68it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Writing gif images: 100%|██████████| 64/64 [00:40<00:00,  1.58it/s]
Making gifs:  20%|██        | 1/5 [00:53<03:35, 53.79s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   2%|▏         | 1/64 [00:07<08:05,  7.71s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   5%|▍         | 3/64 [00:07<02:05,  2.06s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   8%|▊         | 5/64 [00:08<01:01,  1.04s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  11%|█         | 7/64 [00:11<01:21,  1.42s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  14%|█▍        | 9/64 [00:12<00:51,  1.06it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  17%|█▋        | 11/64 [00:12<00:33,  1.56it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  20%|██        | 13/64 [00:12<00:23,  2.20it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  23%|██▎       | 15/64 [00:12<00:16,  3.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  27%|██▋       | 17/64 [00:12<00:11,  3.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  30%|██▉       | 19/64 [00:13<00:09,  5.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  33%|███▎      | 21/64 [00:13<00:07,  6.12it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  36%|███▌      | 23/64 [00:13<00:06,  6.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  39%|███▉      | 25/64 [00:13<00:05,  7.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  42%|████▏     | 27/64 [00:13<00:04,  8.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  45%|████▌     | 29/64 [00:13<00:03,  9.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  48%|████▊     | 31/64 [00:14<00:03, 10.09it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  52%|█████▏    | 33/64 [00:14<00:02, 10.67it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  55%|█████▍    | 35/64 [00:14<00:02, 11.13it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  58%|█████▊    | 37/64 [00:14<00:02,  9.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  61%|██████    | 39/64 [00:14<00:02, 10.13it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  64%|██████▍   | 41/64 [00:15<00:02, 10.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  67%|██████▋   | 43/64 [00:15<00:01, 11.15it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  70%|███████   | 45/64 [00:15<00:01, 11.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  73%|███████▎  | 47/64 [00:15<00:01, 11.73it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  77%|███████▋  | 49/64 [00:15<00:01, 11.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  80%|███████▉  | 51/64 [00:15<00:01,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  83%|████████▎ | 53/64 [00:16<00:01, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  86%|████████▌ | 55/64 [00:16<00:00, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  89%|████████▉ | 57/64 [00:16<00:00, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  92%|█████████▏| 59/64 [00:16<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  95%|█████████▌| 61/64 [00:16<00:00, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  98%|█████████▊| 63/64 [00:16<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Writing gif images: 100%|██████████| 64/64 [00:17<00:00,  3.76it/s]
Making gifs:  40%|████      | 2/5 [01:13<01:40, 33.48s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 12.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.49it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.38it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:02, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:02,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:04<00:00, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.36it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.23it/s]
Making gifs:  60%|██████    | 3/5 [01:20<00:43, 21.75s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05,  9.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 12.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.82it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.00it/s]
Making gifs:  80%|████████  | 4/5 [01:32<00:17, 17.86s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 12.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:00<00:04, 12.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:05,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 10.51it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 11.03it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.41it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 12.02it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.65it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.86it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:01, 12.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 10.49it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.56it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.63it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.25it/s]
Making gifs: 100%|██████████| 5/5 [01:43<00:00, 15.23s/it]Making gifs: 100%|██████████| 5/5 [01:43<00:00, 20.66s/it]
Processing test images:   0%|          | 0/1 [00:00<?, ?it/s]Processing test images: 100%|██████████| 1/1 [00:00<00:00,  1.01it/s]Processing test images: 2it [00:01,  1.47it/s]                       Processing test images: 3it [00:01,  1.71it/s]Processing test images: 4it [00:02,  1.86it/s]Processing test images: 5it [00:02,  1.95it/s]Processing test images: 6it [00:03,  2.00it/s]Processing test images: 7it [00:03,  2.05it/s]Processing test images: 8it [00:04,  2.08it/s]Processing test images: 9it [00:04,  2.11it/s]Processing test images: 10it [00:05,  2.09it/s]Processing test images: 11it [00:05,  2.11it/s]Processing test images: 12it [00:06,  2.13it/s]Processing test images: 13it [00:06,  2.14it/s]Processing test images: 14it [00:07,  2.14it/s]Processing test images: 15it [00:07,  2.14it/s]Processing test images: 16it [00:07,  2.15it/s]Processing test images: 17it [00:08,  2.15it/s]Processing test images: 18it [00:08,  2.15it/s]Processing test images: 19it [00:09,  2.15it/s]Processing test images: 20it [00:09,  2.16it/s]Processing test images: 21it [00:10,  2.16it/s]Processing test images: 22it [00:10,  2.16it/s]Processing test images: 23it [00:11,  2.16it/s]Processing test images: 24it [00:11,  2.16it/s]Processing test images: 25it [00:12,  2.17it/s]Processing test images: 26it [00:12,  2.17it/s]Processing test images: 27it [00:13,  2.17it/s]Processing test images: 28it [00:13,  2.17it/s]Processing test images: 29it [00:13,  2.17it/s]Processing test images: 30it [00:14,  2.17it/s]Processing test images: 31it [00:14,  2.17it/s]Processing test images: 32it [00:15,  2.16it/s]Processing test images: 33it [00:15,  2.16it/s]Processing test images: 34it [00:16,  2.17it/s]Processing test images: 35it [00:16,  2.17it/s]Processing test images: 36it [00:17,  2.17it/s]Processing test images: 37it [00:17,  2.17it/s]Processing test images: 38it [00:18,  2.17it/s]Processing test images: 39it [00:18,  2.17it/s]Processing test images: 40it [00:19,  2.17it/s]Processing test images: 41it [00:19,  2.17it/s]Processing test images: 42it [00:19,  2.17it/s]Processing test images: 43it [00:20,  2.17it/s]Processing test images: 44it [00:20,  2.17it/s]Processing test images: 45it [00:21,  2.17it/s]Processing test images: 46it [00:21,  2.17it/s]Processing test images: 47it [00:22,  2.17it/s]Processing test images: 48it [00:22,  2.17it/s]Processing test images: 49it [00:23,  2.17it/s]Processing test images: 50it [00:23,  2.17it/s]Processing test images: 51it [00:24,  2.17it/s]Processing test images: 52it [00:24,  2.17it/s]Processing test images: 53it [00:25,  2.17it/s]Processing test images: 54it [00:25,  2.17it/s]Processing test images: 55it [00:25,  2.17it/s]Processing test images: 56it [00:26,  2.17it/s]Processing test images: 57it [00:26,  2.17it/s]Processing test images: 58it [00:27,  2.17it/s]Processing test images: 59it [00:27,  2.17it/s]Processing test images: 60it [00:28,  2.17it/s]Processing test images: 61it [00:28,  2.17it/s]Processing test images: 62it [00:29,  2.17it/s]Processing test images: 63it [00:29,  2.17it/s]Processing test images: 64it [00:30,  2.17it/s]Processing test images: 65it [00:30,  2.17it/s]Processing test images: 66it [00:31,  2.17it/s]Processing test images: 67it [00:31,  2.17it/s]Processing test images: 68it [00:31,  2.17it/s]Processing test images: 69it [00:32,  2.17it/s]Processing test images: 70it [00:32,  2.17it/s]Processing test images: 71it [00:33,  2.17it/s]Processing test images: 72it [00:33,  2.16it/s]Processing test images: 73it [00:34,  2.16it/s]Processing test images: 74it [00:34,  2.17it/s]Processing test images: 75it [00:35,  2.17it/s]Processing test images: 76it [00:35,  2.17it/s]Processing test images: 77it [00:36,  2.17it/s]Processing test images: 78it [00:36,  2.17it/s]Processing test images: 79it [00:37,  2.17it/s]Processing test images: 80it [00:37,  2.17it/s]Processing test images: 81it [00:37,  2.17it/s]Processing test images: 82it [00:38,  2.17it/s]Processing test images: 83it [00:38,  2.17it/s]Processing test images: 84it [00:39,  2.17it/s]Processing test images: 85it [00:39,  2.17it/s]Processing test images: 86it [00:40,  2.17it/s]Processing test images: 87it [00:40,  2.17it/s]Processing test images: 88it [00:41,  2.17it/s]Processing test images: 89it [00:41,  2.17it/s]Processing test images: 90it [00:42,  2.17it/s]Processing test images: 91it [00:42,  2.17it/s]Processing test images: 92it [00:43,  2.17it/s]Processing test images: 93it [00:43,  2.17it/s]Processing test images: 94it [00:43,  2.17it/s]Processing test images: 95it [00:44,  2.17it/s]Processing test images: 96it [00:44,  2.17it/s]Processing test images: 97it [00:45,  2.17it/s]Processing test images: 98it [00:45,  2.17it/s]Processing test images: 99it [00:46,  2.17it/s]Processing test images: 100it [00:46,  2.17it/s]Processing test images: 101it [00:47,  2.17it/s]Processing test images: 102it [00:47,  2.17it/s]Processing test images: 103it [00:48,  2.17it/s]Processing test images: 104it [00:48,  2.17it/s]Processing test images: 105it [00:49,  2.17it/s]Processing test images: 106it [00:49,  2.17it/s]Processing test images: 107it [00:49,  2.17it/s]Processing test images: 108it [00:50,  2.17it/s]Processing test images: 109it [00:50,  2.17it/s]Processing test images: 110it [00:51,  2.17it/s]Processing test images: 111it [00:51,  2.17it/s]Processing test images: 112it [00:52,  2.17it/s]Processing test images: 113it [00:52,  2.17it/s]Processing test images: 114it [00:53,  2.17it/s]Processing test images: 115it [00:53,  2.17it/s]Processing test images: 116it [00:54,  2.17it/s]Processing test images: 117it [00:54,  2.17it/s]Processing test images: 118it [00:55,  2.17it/s]Processing test images: 119it [00:55,  2.17it/s]Processing test images: 120it [00:55,  2.17it/s]Processing test images: 121it [00:56,  2.17it/s]Processing test images: 122it [00:56,  2.17it/s]Processing test images: 123it [00:57,  2.17it/s]Processing test images: 124it [00:57,  2.15it/s]Processing test images: 125it [00:58,  2.16it/s]Processing test images: 126it [00:58,  2.16it/s]Processing test images: 127it [00:59,  2.16it/s]Processing test images: 128it [00:59,  2.16it/s]Processing test images: 129it [01:00,  2.16it/s]Processing test images: 130it [01:00,  2.16it/s]Processing test images: 131it [01:01,  2.16it/s]Processing test images: 132it [01:01,  2.16it/s]Processing test images: 133it [01:01,  2.16it/s]Processing test images: 134it [01:02,  2.16it/s]Processing test images: 135it [01:02,  2.16it/s]Processing test images: 136it [01:03,  2.16it/s]Processing test images: 137it [01:03,  2.16it/s]Processing test images: 138it [01:04,  2.16it/s]Processing test images: 139it [01:04,  2.16it/s]Processing test images: 140it [01:05,  2.16it/s]Processing test images: 141it [01:05,  2.16it/s]Processing test images: 142it [01:06,  2.16it/s]Processing test images: 143it [01:06,  2.16it/s]Processing test images: 144it [01:07,  2.16it/s]Processing test images: 145it [01:07,  2.16it/s]Processing test images: 146it [01:08,  2.16it/s]Processing test images: 147it [01:08,  2.16it/s]Processing test images: 148it [01:08,  2.15it/s]Processing test images: 149it [01:09,  2.15it/s]Processing test images: 150it [01:09,  2.15it/s]Processing test images: 151it [01:10,  2.15it/s]Processing test images: 152it [01:10,  2.15it/s]Processing test images: 153it [01:11,  2.15it/s]Processing test images: 154it [01:11,  2.15it/s]Processing test images: 155it [01:12,  2.15it/s]Processing test images: 156it [01:12,  2.15it/s]Processing test images: 157it [01:13,  2.15it/s]Processing test images: 158it [01:13,  2.15it/s]Processing test images: 159it [01:14,  2.15it/s]Processing test images: 160it [01:14,  2.15it/s]Processing test images: 161it [01:14,  2.16it/s]Processing test images: 162it [01:15,  2.16it/s]Processing test images: 163it [01:15,  2.16it/s]Processing test images: 164it [01:16,  2.16it/s]Processing test images: 165it [01:16,  2.16it/s]Processing test images: 166it [01:17,  2.16it/s]Processing test images: 167it [01:17,  2.16it/s]Processing test images: 168it [01:18,  2.16it/s]Processing test images: 169it [01:18,  2.16it/s]Processing test images: 170it [01:19,  2.16it/s]Processing test images: 171it [01:19,  2.16it/s]Processing test images: 172it [01:20,  2.16it/s]Processing test images: 173it [01:20,  2.16it/s]Processing test images: 174it [01:20,  2.16it/s]Processing test images: 175it [01:21,  2.16it/s]Processing test images: 176it [01:21,  2.16it/s]Processing test images: 177it [01:22,  2.16it/s]Processing test images: 178it [01:22,  2.16it/s]Processing test images: 179it [01:23,  2.16it/s]Processing test images: 180it [01:23,  2.16it/s]Processing test images: 181it [01:24,  2.16it/s]Processing test images: 182it [01:24,  2.16it/s]Processing test images: 183it [01:25,  2.16it/s]Processing test images: 184it [01:25,  2.16it/s]Processing test images: 185it [01:26,  2.16it/s]Processing test images: 186it [01:26,  2.16it/s]Processing test images: 187it [01:26,  2.16it/s]Processing test images: 188it [01:27,  2.16it/s]Processing test images: 189it [01:27,  2.17it/s]Processing test images: 190it [01:28,  2.17it/s]Processing test images: 191it [01:28,  2.16it/s]Processing test images: 192it [01:29,  2.16it/s]Processing test images: 193it [01:29,  2.16it/s]Processing test images: 194it [01:30,  2.16it/s]Processing test images: 195it [01:30,  2.16it/s]Processing test images: 196it [01:31,  2.16it/s]Processing test images: 197it [01:31,  2.16it/s]Processing test images: 198it [01:32,  2.17it/s]Processing test images: 199it [01:32,  2.16it/s]Processing test images: 200it [01:33,  2.16it/s]Processing test images: 201it [01:33,  2.16it/s]Processing test images: 202it [01:33,  2.16it/s]Processing test images: 203it [01:34,  2.16it/s]Processing test images: 204it [01:34,  2.16it/s]Processing test images: 205it [01:35,  2.17it/s]Processing test images: 206it [01:35,  2.17it/s]Processing test images: 207it [01:36,  2.16it/s]Processing test images: 208it [01:36,  2.16it/s]Processing test images: 209it [01:37,  2.16it/s]Processing test images: 210it [01:37,  2.17it/s]Processing test images: 211it [01:38,  2.17it/s]Processing test images: 212it [01:38,  2.17it/s]Processing test images: 213it [01:39,  2.17it/s]Processing test images: 214it [01:39,  2.16it/s]Processing test images: 215it [01:39,  2.16it/s]Processing test images: 216it [01:40,  2.16it/s]Processing test images: 217it [01:40,  2.16it/s]Processing test images: 218it [01:41,  2.17it/s]Processing test images: 219it [01:41,  2.16it/s]Processing test images: 220it [01:42,  2.16it/s]Processing test images: 221it [01:42,  2.16it/s]Processing test images: 222it [01:43,  2.16it/s]Processing test images: 223it [01:43,  2.16it/s]Processing test images: 224it [01:44,  2.16it/s]Processing test images: 225it [01:44,  2.16it/s]Processing test images: 226it [01:45,  2.16it/s]Processing test images: 227it [01:45,  2.16it/s]Processing test images: 228it [01:45,  2.16it/s]Processing test images: 229it [01:46,  2.16it/s]Processing test images: 230it [01:46,  2.16it/s]Processing test images: 231it [01:47,  2.16it/s]Processing test images: 232it [01:47,  2.17it/s]Processing test images: 233it [01:48,  2.16it/s]Processing test images: 234it [01:48,  2.17it/s]Processing test images: 235it [01:49,  2.17it/s]Processing test images: 236it [01:49,  2.16it/s]Processing test images: 237it [01:50,  2.16it/s]Processing test images: 238it [01:50,  2.16it/s]Processing test images: 239it [01:51,  2.16it/s]Processing test images: 240it [01:51,  2.16it/s]Processing test images: 241it [01:51,  2.16it/s]Processing test images: 242it [01:52,  2.16it/s]Processing test images: 243it [01:52,  2.16it/s]Processing test images: 244it [01:53,  2.16it/s]Processing test images: 245it [01:53,  2.16it/s]Processing test images: 246it [01:54,  2.17it/s]Processing test images: 247it [01:54,  2.17it/s]Processing test images: 248it [01:55,  2.17it/s]Processing test images: 249it [01:55,  2.17it/s]Processing test images: 250it [01:56,  2.17it/s]Processing test images: 251it [01:56,  2.17it/s]Processing test images: 252it [01:57,  2.16it/s]Processing test images: 253it [01:57,  2.16it/s]Processing test images: 254it [01:57,  2.16it/s]Processing test images: 255it [01:58,  2.16it/s]Processing test images: 256it [01:58,  2.15it/s]Processing test images: 257it [01:59,  2.16it/s]Processing test images: 258it [01:59,  2.16it/s]Processing test images: 259it [02:00,  2.16it/s]Processing test images: 260it [02:00,  2.16it/s]Processing test images: 261it [02:01,  2.16it/s]Processing test images: 262it [02:01,  2.16it/s]Processing test images: 263it [02:02,  2.16it/s]Processing test images: 264it [02:02,  2.16it/s]Processing test images: 265it [02:03,  2.16it/s]Processing test images: 266it [02:03,  2.16it/s]Processing test images: 267it [02:03,  2.16it/s]Processing test images: 268it [02:04,  2.15it/s]Processing test images: 269it [02:04,  2.15it/s]Processing test images: 270it [02:05,  2.15it/s]Processing test images: 271it [02:05,  2.14it/s]Processing test images: 272it [02:06,  2.14it/s]Processing test images: 273it [02:06,  2.15it/s]Processing test images: 274it [02:07,  2.15it/s]Processing test images: 275it [02:07,  2.15it/s]Processing test images: 276it [02:08,  2.15it/s]Processing test images: 277it [02:08,  2.15it/s]Processing test images: 278it [02:09,  2.15it/s]Processing test images: 279it [02:09,  2.15it/s]Processing test images: 280it [02:10,  2.15it/s]Processing test images: 281it [02:10,  2.15it/s]Processing test images: 282it [02:10,  2.15it/s]Processing test images: 283it [02:11,  2.16it/s]Processing test images: 284it [02:11,  2.16it/s]Processing test images: 285it [02:12,  2.16it/s]Processing test images: 286it [02:12,  2.16it/s]Processing test images: 287it [02:13,  2.16it/s]Processing test images: 288it [02:13,  2.16it/s]Processing test images: 289it [02:14,  2.18it/s]Processing test images: 290it [02:14,  2.24it/s]Processing test images: 291it [02:15,  2.28it/s]Processing test images: 292it [02:15,  2.31it/s]Processing test images: 293it [02:15,  2.33it/s]Processing test images: 294it [02:16,  2.35it/s]Processing test images: 295it [02:16,  2.36it/s]Processing test images: 296it [02:17,  2.37it/s]Processing test images: 297it [02:17,  2.38it/s]Processing test images: 298it [02:17,  2.38it/s]Processing test images: 299it [02:18,  2.38it/s]Processing test images: 300it [02:18,  2.37it/s]Processing test images: 300it [02:18,  2.16it/s]
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:487: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols)
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:495: MatplotlibDeprecationWarning: Passing non-integers as three-element position specification is deprecated since 3.3 and will be removed two minor releases later.
  plt.subplot(3, cols, idx + 1 + cols + (cols - 1))
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
/gpfs/data/tserre/aarjun1/pathtracker/mot/InT-Models-main_temp/utils/engine.py:491: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
  plt.subplot(3, cols, idx + 1 + cols)
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Making gifs:   0%|          | 0/5 [00:00<?, ?it/s]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   2%|▏         | 1/64 [00:04<05:09,  4.91s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   5%|▍         | 3/64 [00:05<01:21,  1.33s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   8%|▊         | 5/64 [00:05<00:40,  1.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  11%|█         | 7/64 [00:05<00:24,  2.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  14%|█▍        | 9/64 [00:05<00:16,  3.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  17%|█▋        | 11/64 [00:05<00:11,  4.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  20%|██        | 13/64 [00:11<00:56,  1.11s/it][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  23%|██▎       | 15/64 [00:11<00:38,  1.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  27%|██▋       | 17/64 [00:11<00:26,  1.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  30%|██▉       | 19/64 [00:11<00:18,  2.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  33%|███▎      | 21/64 [00:12<00:13,  3.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  36%|███▌      | 23/64 [00:12<00:09,  4.17it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  39%|███▉      | 25/64 [00:12<00:07,  5.22it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  42%|████▏     | 27/64 [00:12<00:06,  5.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  45%|████▌     | 29/64 [00:12<00:05,  6.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  48%|████▊     | 31/64 [00:13<00:04,  7.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  52%|█████▏    | 33/64 [00:13<00:03,  8.76it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  55%|█████▍    | 35/64 [00:13<00:03,  9.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  58%|█████▊    | 37/64 [00:13<00:02, 10.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  61%|██████    | 39/64 [00:13<00:02, 10.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  64%|██████▍   | 41/64 [00:14<00:02,  9.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  67%|██████▋   | 43/64 [00:14<00:02, 10.00it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  70%|███████   | 45/64 [00:14<00:01, 10.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  73%|███████▎  | 47/64 [00:14<00:01, 11.07it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  77%|███████▋  | 49/64 [00:14<00:01, 11.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  80%|███████▉  | 51/64 [00:14<00:01, 11.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  83%|████████▎ | 53/64 [00:15<00:00, 11.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  86%|████████▌ | 55/64 [00:15<00:00,  9.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  89%|████████▉ | 57/64 [00:15<00:00, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  92%|█████████▏| 59/64 [00:15<00:00, 10.88it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  95%|█████████▌| 61/64 [00:15<00:00, 11.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  98%|█████████▊| 63/64 [00:15<00:00, 11.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Writing gif images: 100%|██████████| 64/64 [00:16<00:00,  3.99it/s]
Making gifs:  20%|██        | 1/5 [00:21<01:25, 21.50s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:07,  8.23it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05,  9.70it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 10.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.15it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:02<00:13,  3.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:02<00:10,  4.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:02<00:07,  6.05it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:02<00:07,  6.25it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:02<00:05,  7.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:03<00:04,  8.40it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:03<00:04,  9.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:03<00:03, 10.04it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:04<00:06,  5.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:04<00:05,  6.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:04<00:04,  6.56it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:04<00:03,  7.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:04<00:03,  8.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:05<00:02,  9.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:05<00:02, 10.19it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:05<00:02, 10.75it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:05<00:01, 11.18it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:05<00:01,  9.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:06<00:01, 10.17it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:06<00:01, 10.74it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:06<00:01, 11.16it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:06<00:00, 11.49it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:06<00:00, 11.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:06<00:00, 11.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:07<00:00,  9.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:07<00:00, 10.43it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:07<00:00, 10.93it/s][AWriting gif images: 100%|██████████| 64/64 [00:07<00:00,  8.52it/s]
Making gifs:  40%|████      | 2/5 [00:38<00:57, 19.03s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.24it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.32it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:04, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05,  9.60it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:05, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 10.93it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:01<00:03, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:04,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.63it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.99it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:02, 10.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.36it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.64it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.85it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 12.01it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01,  9.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.48it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 10.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.35it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.84it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.97it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 11.24it/s]
Making gifs:  60%|██████    | 3/5 [00:47<00:28, 14.30s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:08,  6.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:06,  9.31it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:05, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05, 11.13it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:04, 11.54it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 11.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04,  9.69it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:04, 10.39it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:04, 10.91it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:03, 11.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 11.59it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 11.78it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:03,  9.80it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:03, 10.44it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:04<00:02,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 10.46it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 11.61it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.97it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00,  9.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 10.94it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00, 11.31it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.97it/s]
Making gifs:  80%|████████  | 4/5 [00:58<00:12, 12.93s/it]
Writing gif images:   0%|          | 0/64 [00:00<?, ?it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   3%|▎         | 2/64 [00:00<00:05, 12.27it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   6%|▋         | 4/64 [00:00<00:04, 12.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:   9%|▉         | 6/64 [00:00<00:04, 12.30it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  12%|█▎        | 8/64 [00:00<00:05,  9.42it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  16%|█▌        | 10/64 [00:00<00:05, 10.29it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  19%|█▉        | 12/64 [00:01<00:04, 10.90it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  22%|██▏       | 14/64 [00:01<00:04, 11.33it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  25%|██▌       | 16/64 [00:01<00:04, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  28%|██▊       | 18/64 [00:01<00:03, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  31%|███▏      | 20/64 [00:01<00:03, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  34%|███▍      | 22/64 [00:02<00:04,  9.71it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  38%|███▊      | 24/64 [00:02<00:03, 10.37it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  41%|████      | 26/64 [00:02<00:03, 10.89it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  44%|████▍     | 28/64 [00:02<00:03, 11.28it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  47%|████▋     | 30/64 [00:02<00:02, 11.57it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  50%|█████     | 32/64 [00:02<00:02, 11.79it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  53%|█████▎    | 34/64 [00:03<00:02, 11.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  56%|█████▋    | 36/64 [00:03<00:02,  9.81it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  59%|█████▉    | 38/64 [00:03<00:02, 10.45it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  62%|██████▎   | 40/64 [00:03<00:02, 10.95it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  66%|██████▌   | 42/64 [00:03<00:01, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  69%|██████▉   | 44/64 [00:03<00:01, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  72%|███████▏  | 46/64 [00:04<00:01, 11.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  75%|███████▌  | 48/64 [00:04<00:01, 11.98it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  78%|███████▊  | 50/64 [00:04<00:01,  9.83it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  81%|████████▏ | 52/64 [00:04<00:01, 10.47it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  84%|████████▍ | 54/64 [00:04<00:00, 10.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  88%|████████▊ | 56/64 [00:05<00:00, 11.34it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  91%|█████████ | 58/64 [00:05<00:00, 11.62it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  94%|█████████▍| 60/64 [00:05<00:00, 11.82it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images:  97%|█████████▋| 62/64 [00:05<00:00, 11.96it/s][AClipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).
Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).

Writing gif images: 100%|██████████| 64/64 [00:05<00:00,  9.80it/s][AWriting gif images: 100%|██████████| 64/64 [00:05<00:00, 10.97it/s]
Making gifs: 100%|██████████| 5/5 [01:17<00:00, 15.26s/it]Making gifs: 100%|██████████| 5/5 [01:17<00:00, 15.54s/it]
